{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Assignment 2"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Highlights\n",
    "*On April 15, 1912 during her maiden voyage from Southampton to New York City, Titanic sank after it collided with an iceberg. There were approximately 2224 passengers and crew members on board but it is estimated that 1514 of them died. One of the reasons that the shipwreck led to such loss of life was that there were not enough lifeboats for everyone on board.*\n",
    "\n",
    " *Moreover \"The water temperature in the area where Titanic sank, which was well below normal, also contributed to the rapid death of many passengers during the sinking. Water temperature readings taken around the time of the accident were reported to be 28 °F (−2 °C). Typical water temperatures were normally in the mid-40 °F range during mid-April.[216] The coldness of the water was a critical factor, often causing death within minutes for many of those in the water.\"* (https://www.washingtonpost.com/blogs/capital-weather-gang/post/the-weather-during-the-titanic-disaster-looking-back-100-years/2012/04/11/gIQAAv6SAT_blog.html?utm_term=.cb4f9e0673c7)\n",
    "\n",
    " In this assignment we will analyze the open dataset with real data on the passengers aboard the Titanic. Even though luck could have been a part of the reason for survival, some group of people were more likely to survive than others."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Data Dictionary\n",
    "\n",
    "<li> \"Survived\": 0 = No, 1 = Yes \n",
    "<li> \"Pclass\": Ticket class 1 = 1st, 2 = 2nd, 3 = 3rd \n",
    "<li> \"Sex\": female, male\n",
    "<li> \"Age\": Age in years \n",
    "<li> \"SibSp\": # of siblings / spouses aboard the Titanic \n",
    "<li> \"Parch\": # of parents / children aboard the Titanic \n",
    "<li> \"Ticket\": Ticket number \n",
    "<li> \"Fare\": Passenger fare \n",
    "<li> \"Cabin\": Cabin number \n",
    "<li> \"Embarked\": Port of Embarkation C = Cherbourg, Q = Queenstown, S = Southampton\n",
    "\n",
    "### Variable Notes\n",
    "\n",
    "<ul> Pclass: A proxy for socio-economic status (SES)\n",
    "<li> 1st = Upper\n",
    "<li> 2nd = Middle\n",
    "<li> 3rd = Lower\n",
    "</ul>\n",
    "<ul> Age: Age is fractional if less than 1. If the age is estimated, it is in the form of xx.5 </ul>\n",
    "<ul> SibSp: The dataset defines family relations in this way...\n",
    "<li> Sibling = brother, sister, stepbrother, stepsister\n",
    "<li> Spouse = husband, wife (mistresses and fiancés were ignored)\n",
    "</ul>\n",
    "<ul> Parch: The dataset defines family relations in this way...\n",
    "<li> Parent = mother, father\n",
    "<li> Child = daughter, son, stepdaughter, stepson\n",
    "Some children travelled only with a nanny, therefore parch=0 for them.\n",
    "</ul>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "\n",
    "# visualization\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Data loading"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>A/5 21171</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17599</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C85</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Heikkinen, Miss. Laina</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>STON/O2. 3101282</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113803</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>C123</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Allen, Mr. William Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>373450</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Moran, Mr. James</td>\n",
       "      <td>male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>330877</td>\n",
       "      <td>8.4583</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>McCarthy, Mr. Timothy J</td>\n",
       "      <td>male</td>\n",
       "      <td>54.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>17463</td>\n",
       "      <td>51.8625</td>\n",
       "      <td>E46</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Palsson, Master. Gosta Leonard</td>\n",
       "      <td>male</td>\n",
       "      <td>2.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>349909</td>\n",
       "      <td>21.0750</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Johnson, Mrs. Oscar W (Elisabeth Vilhelmina Berg)</td>\n",
       "      <td>female</td>\n",
       "      <td>27.0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>347742</td>\n",
       "      <td>11.1333</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Nasser, Mrs. Nicholas (Adele Achem)</td>\n",
       "      <td>female</td>\n",
       "      <td>14.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>237736</td>\n",
       "      <td>30.0708</td>\n",
       "      <td>NaN</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Sandstrom, Miss. Marguerite Rut</td>\n",
       "      <td>female</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>PP 9549</td>\n",
       "      <td>16.7000</td>\n",
       "      <td>G6</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Bonnell, Miss. Elizabeth</td>\n",
       "      <td>female</td>\n",
       "      <td>58.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>113783</td>\n",
       "      <td>26.5500</td>\n",
       "      <td>C103</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>13</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Saundercock, Mr. William Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>20.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>A/5. 2151</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Andersson, Mr. Anders Johan</td>\n",
       "      <td>male</td>\n",
       "      <td>39.0</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>347082</td>\n",
       "      <td>31.2750</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Vestrom, Miss. Hulda Amanda Adolfina</td>\n",
       "      <td>female</td>\n",
       "      <td>14.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>350406</td>\n",
       "      <td>7.8542</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Hewlett, Mrs. (Mary D Kingcome)</td>\n",
       "      <td>female</td>\n",
       "      <td>55.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>248706</td>\n",
       "      <td>16.0000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>17</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Rice, Master. Eugene</td>\n",
       "      <td>male</td>\n",
       "      <td>2.0</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>382652</td>\n",
       "      <td>29.1250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>18</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Williams, Mr. Charles Eugene</td>\n",
       "      <td>male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>244373</td>\n",
       "      <td>13.0000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Vander Planke, Mrs. Julius (Emelia Maria Vande...</td>\n",
       "      <td>female</td>\n",
       "      <td>31.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>345763</td>\n",
       "      <td>18.0000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Masselmani, Mrs. Fatima</td>\n",
       "      <td>female</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2649</td>\n",
       "      <td>7.2250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>21</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Fynney, Mr. Joseph J</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>239865</td>\n",
       "      <td>26.0000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>22</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Beesley, Mr. Lawrence</td>\n",
       "      <td>male</td>\n",
       "      <td>34.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>248698</td>\n",
       "      <td>13.0000</td>\n",
       "      <td>D56</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>23</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>McGowan, Miss. Anna \"Annie\"</td>\n",
       "      <td>female</td>\n",
       "      <td>15.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>330923</td>\n",
       "      <td>8.0292</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>24</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Sloper, Mr. William Thompson</td>\n",
       "      <td>male</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>113788</td>\n",
       "      <td>35.5000</td>\n",
       "      <td>A6</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>25</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Palsson, Miss. Torborg Danira</td>\n",
       "      <td>female</td>\n",
       "      <td>8.0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>349909</td>\n",
       "      <td>21.0750</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>26</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Asplund, Mrs. Carl Oscar (Selma Augusta Emilia...</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>347077</td>\n",
       "      <td>31.3875</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Emir, Mr. Farred Chehab</td>\n",
       "      <td>male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2631</td>\n",
       "      <td>7.2250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>28</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Fortune, Mr. Charles Alexander</td>\n",
       "      <td>male</td>\n",
       "      <td>19.0</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>19950</td>\n",
       "      <td>263.0000</td>\n",
       "      <td>C23 C25 C27</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>29</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>O'Dwyer, Miss. Ellen \"Nellie\"</td>\n",
       "      <td>female</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>330959</td>\n",
       "      <td>7.8792</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>30</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Todoroff, Mr. Lalio</td>\n",
       "      <td>male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>349216</td>\n",
       "      <td>7.8958</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>861</th>\n",
       "      <td>862</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Giles, Mr. Frederick Edward</td>\n",
       "      <td>male</td>\n",
       "      <td>21.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>28134</td>\n",
       "      <td>11.5000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>862</th>\n",
       "      <td>863</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Swift, Mrs. Frederick Joel (Margaret Welles Ba...</td>\n",
       "      <td>female</td>\n",
       "      <td>48.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>17466</td>\n",
       "      <td>25.9292</td>\n",
       "      <td>D17</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>863</th>\n",
       "      <td>864</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Sage, Miss. Dorothy Edith \"Dolly\"</td>\n",
       "      <td>female</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>CA. 2343</td>\n",
       "      <td>69.5500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>864</th>\n",
       "      <td>865</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Gill, Mr. John William</td>\n",
       "      <td>male</td>\n",
       "      <td>24.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>233866</td>\n",
       "      <td>13.0000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>865</th>\n",
       "      <td>866</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Bystrom, Mrs. (Karolina)</td>\n",
       "      <td>female</td>\n",
       "      <td>42.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>236852</td>\n",
       "      <td>13.0000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>866</th>\n",
       "      <td>867</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Duran y More, Miss. Asuncion</td>\n",
       "      <td>female</td>\n",
       "      <td>27.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>SC/PARIS 2149</td>\n",
       "      <td>13.8583</td>\n",
       "      <td>NaN</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>867</th>\n",
       "      <td>868</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Roebling, Mr. Washington Augustus II</td>\n",
       "      <td>male</td>\n",
       "      <td>31.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17590</td>\n",
       "      <td>50.4958</td>\n",
       "      <td>A24</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>868</th>\n",
       "      <td>869</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>van Melkebeke, Mr. Philemon</td>\n",
       "      <td>male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>345777</td>\n",
       "      <td>9.5000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>869</th>\n",
       "      <td>870</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Johnson, Master. Harold Theodor</td>\n",
       "      <td>male</td>\n",
       "      <td>4.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>347742</td>\n",
       "      <td>11.1333</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>870</th>\n",
       "      <td>871</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Balkic, Mr. Cerin</td>\n",
       "      <td>male</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>349248</td>\n",
       "      <td>7.8958</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>871</th>\n",
       "      <td>872</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Beckwith, Mrs. Richard Leonard (Sallie Monypeny)</td>\n",
       "      <td>female</td>\n",
       "      <td>47.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>11751</td>\n",
       "      <td>52.5542</td>\n",
       "      <td>D35</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>872</th>\n",
       "      <td>873</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Carlsson, Mr. Frans Olof</td>\n",
       "      <td>male</td>\n",
       "      <td>33.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>695</td>\n",
       "      <td>5.0000</td>\n",
       "      <td>B51 B53 B55</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>873</th>\n",
       "      <td>874</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Vander Cruyssen, Mr. Victor</td>\n",
       "      <td>male</td>\n",
       "      <td>47.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>345765</td>\n",
       "      <td>9.0000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>874</th>\n",
       "      <td>875</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Abelson, Mrs. Samuel (Hannah Wizosky)</td>\n",
       "      <td>female</td>\n",
       "      <td>28.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>P/PP 3381</td>\n",
       "      <td>24.0000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>875</th>\n",
       "      <td>876</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Najib, Miss. Adele Kiamie \"Jane\"</td>\n",
       "      <td>female</td>\n",
       "      <td>15.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2667</td>\n",
       "      <td>7.2250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>876</th>\n",
       "      <td>877</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Gustafsson, Mr. Alfred Ossian</td>\n",
       "      <td>male</td>\n",
       "      <td>20.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7534</td>\n",
       "      <td>9.8458</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>877</th>\n",
       "      <td>878</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Petroff, Mr. Nedelio</td>\n",
       "      <td>male</td>\n",
       "      <td>19.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>349212</td>\n",
       "      <td>7.8958</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>878</th>\n",
       "      <td>879</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Laleff, Mr. Kristo</td>\n",
       "      <td>male</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>349217</td>\n",
       "      <td>7.8958</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>879</th>\n",
       "      <td>880</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Potter, Mrs. Thomas Jr (Lily Alexenia Wilson)</td>\n",
       "      <td>female</td>\n",
       "      <td>56.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>11767</td>\n",
       "      <td>83.1583</td>\n",
       "      <td>C50</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>880</th>\n",
       "      <td>881</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Shelley, Mrs. William (Imanita Parrish Hall)</td>\n",
       "      <td>female</td>\n",
       "      <td>25.0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>230433</td>\n",
       "      <td>26.0000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>881</th>\n",
       "      <td>882</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Markun, Mr. Johann</td>\n",
       "      <td>male</td>\n",
       "      <td>33.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>349257</td>\n",
       "      <td>7.8958</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>882</th>\n",
       "      <td>883</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Dahlberg, Miss. Gerda Ulrika</td>\n",
       "      <td>female</td>\n",
       "      <td>22.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7552</td>\n",
       "      <td>10.5167</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>883</th>\n",
       "      <td>884</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Banfield, Mr. Frederick James</td>\n",
       "      <td>male</td>\n",
       "      <td>28.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>C.A./SOTON 34068</td>\n",
       "      <td>10.5000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>884</th>\n",
       "      <td>885</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Sutehall, Mr. Henry Jr</td>\n",
       "      <td>male</td>\n",
       "      <td>25.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>SOTON/OQ 392076</td>\n",
       "      <td>7.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>885</th>\n",
       "      <td>886</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Rice, Mrs. William (Margaret Norton)</td>\n",
       "      <td>female</td>\n",
       "      <td>39.0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>382652</td>\n",
       "      <td>29.1250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>886</th>\n",
       "      <td>887</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Montvila, Rev. Juozas</td>\n",
       "      <td>male</td>\n",
       "      <td>27.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>211536</td>\n",
       "      <td>13.0000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>887</th>\n",
       "      <td>888</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Graham, Miss. Margaret Edith</td>\n",
       "      <td>female</td>\n",
       "      <td>19.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>112053</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>B42</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>888</th>\n",
       "      <td>889</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Johnston, Miss. Catherine Helen \"Carrie\"</td>\n",
       "      <td>female</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>W./C. 6607</td>\n",
       "      <td>23.4500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>889</th>\n",
       "      <td>890</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Behr, Mr. Karl Howell</td>\n",
       "      <td>male</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>111369</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>C148</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>890</th>\n",
       "      <td>891</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Dooley, Mr. Patrick</td>\n",
       "      <td>male</td>\n",
       "      <td>32.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>370376</td>\n",
       "      <td>7.7500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>891 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     PassengerId  Survived  Pclass  \\\n",
       "0              1         0       3   \n",
       "1              2         1       1   \n",
       "2              3         1       3   \n",
       "3              4         1       1   \n",
       "4              5         0       3   \n",
       "5              6         0       3   \n",
       "6              7         0       1   \n",
       "7              8         0       3   \n",
       "8              9         1       3   \n",
       "9             10         1       2   \n",
       "10            11         1       3   \n",
       "11            12         1       1   \n",
       "12            13         0       3   \n",
       "13            14         0       3   \n",
       "14            15         0       3   \n",
       "15            16         1       2   \n",
       "16            17         0       3   \n",
       "17            18         1       2   \n",
       "18            19         0       3   \n",
       "19            20         1       3   \n",
       "20            21         0       2   \n",
       "21            22         1       2   \n",
       "22            23         1       3   \n",
       "23            24         1       1   \n",
       "24            25         0       3   \n",
       "25            26         1       3   \n",
       "26            27         0       3   \n",
       "27            28         0       1   \n",
       "28            29         1       3   \n",
       "29            30         0       3   \n",
       "..           ...       ...     ...   \n",
       "861          862         0       2   \n",
       "862          863         1       1   \n",
       "863          864         0       3   \n",
       "864          865         0       2   \n",
       "865          866         1       2   \n",
       "866          867         1       2   \n",
       "867          868         0       1   \n",
       "868          869         0       3   \n",
       "869          870         1       3   \n",
       "870          871         0       3   \n",
       "871          872         1       1   \n",
       "872          873         0       1   \n",
       "873          874         0       3   \n",
       "874          875         1       2   \n",
       "875          876         1       3   \n",
       "876          877         0       3   \n",
       "877          878         0       3   \n",
       "878          879         0       3   \n",
       "879          880         1       1   \n",
       "880          881         1       2   \n",
       "881          882         0       3   \n",
       "882          883         0       3   \n",
       "883          884         0       2   \n",
       "884          885         0       3   \n",
       "885          886         0       3   \n",
       "886          887         0       2   \n",
       "887          888         1       1   \n",
       "888          889         0       3   \n",
       "889          890         1       1   \n",
       "890          891         0       3   \n",
       "\n",
       "                                                  Name     Sex   Age  SibSp  \\\n",
       "0                              Braund, Mr. Owen Harris    male  22.0      1   \n",
       "1    Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n",
       "2                               Heikkinen, Miss. Laina  female  26.0      0   \n",
       "3         Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n",
       "4                             Allen, Mr. William Henry    male  35.0      0   \n",
       "5                                     Moran, Mr. James    male   NaN      0   \n",
       "6                              McCarthy, Mr. Timothy J    male  54.0      0   \n",
       "7                       Palsson, Master. Gosta Leonard    male   2.0      3   \n",
       "8    Johnson, Mrs. Oscar W (Elisabeth Vilhelmina Berg)  female  27.0      0   \n",
       "9                  Nasser, Mrs. Nicholas (Adele Achem)  female  14.0      1   \n",
       "10                     Sandstrom, Miss. Marguerite Rut  female   4.0      1   \n",
       "11                            Bonnell, Miss. Elizabeth  female  58.0      0   \n",
       "12                      Saundercock, Mr. William Henry    male  20.0      0   \n",
       "13                         Andersson, Mr. Anders Johan    male  39.0      1   \n",
       "14                Vestrom, Miss. Hulda Amanda Adolfina  female  14.0      0   \n",
       "15                    Hewlett, Mrs. (Mary D Kingcome)   female  55.0      0   \n",
       "16                                Rice, Master. Eugene    male   2.0      4   \n",
       "17                        Williams, Mr. Charles Eugene    male   NaN      0   \n",
       "18   Vander Planke, Mrs. Julius (Emelia Maria Vande...  female  31.0      1   \n",
       "19                             Masselmani, Mrs. Fatima  female   NaN      0   \n",
       "20                                Fynney, Mr. Joseph J    male  35.0      0   \n",
       "21                               Beesley, Mr. Lawrence    male  34.0      0   \n",
       "22                         McGowan, Miss. Anna \"Annie\"  female  15.0      0   \n",
       "23                        Sloper, Mr. William Thompson    male  28.0      0   \n",
       "24                       Palsson, Miss. Torborg Danira  female   8.0      3   \n",
       "25   Asplund, Mrs. Carl Oscar (Selma Augusta Emilia...  female  38.0      1   \n",
       "26                             Emir, Mr. Farred Chehab    male   NaN      0   \n",
       "27                      Fortune, Mr. Charles Alexander    male  19.0      3   \n",
       "28                       O'Dwyer, Miss. Ellen \"Nellie\"  female   NaN      0   \n",
       "29                                 Todoroff, Mr. Lalio    male   NaN      0   \n",
       "..                                                 ...     ...   ...    ...   \n",
       "861                        Giles, Mr. Frederick Edward    male  21.0      1   \n",
       "862  Swift, Mrs. Frederick Joel (Margaret Welles Ba...  female  48.0      0   \n",
       "863                  Sage, Miss. Dorothy Edith \"Dolly\"  female   NaN      8   \n",
       "864                             Gill, Mr. John William    male  24.0      0   \n",
       "865                           Bystrom, Mrs. (Karolina)  female  42.0      0   \n",
       "866                       Duran y More, Miss. Asuncion  female  27.0      1   \n",
       "867               Roebling, Mr. Washington Augustus II    male  31.0      0   \n",
       "868                        van Melkebeke, Mr. Philemon    male   NaN      0   \n",
       "869                    Johnson, Master. Harold Theodor    male   4.0      1   \n",
       "870                                  Balkic, Mr. Cerin    male  26.0      0   \n",
       "871   Beckwith, Mrs. Richard Leonard (Sallie Monypeny)  female  47.0      1   \n",
       "872                           Carlsson, Mr. Frans Olof    male  33.0      0   \n",
       "873                        Vander Cruyssen, Mr. Victor    male  47.0      0   \n",
       "874              Abelson, Mrs. Samuel (Hannah Wizosky)  female  28.0      1   \n",
       "875                   Najib, Miss. Adele Kiamie \"Jane\"  female  15.0      0   \n",
       "876                      Gustafsson, Mr. Alfred Ossian    male  20.0      0   \n",
       "877                               Petroff, Mr. Nedelio    male  19.0      0   \n",
       "878                                 Laleff, Mr. Kristo    male   NaN      0   \n",
       "879      Potter, Mrs. Thomas Jr (Lily Alexenia Wilson)  female  56.0      0   \n",
       "880       Shelley, Mrs. William (Imanita Parrish Hall)  female  25.0      0   \n",
       "881                                 Markun, Mr. Johann    male  33.0      0   \n",
       "882                       Dahlberg, Miss. Gerda Ulrika  female  22.0      0   \n",
       "883                      Banfield, Mr. Frederick James    male  28.0      0   \n",
       "884                             Sutehall, Mr. Henry Jr    male  25.0      0   \n",
       "885               Rice, Mrs. William (Margaret Norton)  female  39.0      0   \n",
       "886                              Montvila, Rev. Juozas    male  27.0      0   \n",
       "887                       Graham, Miss. Margaret Edith  female  19.0      0   \n",
       "888           Johnston, Miss. Catherine Helen \"Carrie\"  female   NaN      1   \n",
       "889                              Behr, Mr. Karl Howell    male  26.0      0   \n",
       "890                                Dooley, Mr. Patrick    male  32.0      0   \n",
       "\n",
       "     Parch            Ticket      Fare        Cabin Embarked  \n",
       "0        0         A/5 21171    7.2500          NaN        S  \n",
       "1        0          PC 17599   71.2833          C85        C  \n",
       "2        0  STON/O2. 3101282    7.9250          NaN        S  \n",
       "3        0            113803   53.1000         C123        S  \n",
       "4        0            373450    8.0500          NaN        S  \n",
       "5        0            330877    8.4583          NaN        Q  \n",
       "6        0             17463   51.8625          E46        S  \n",
       "7        1            349909   21.0750          NaN        S  \n",
       "8        2            347742   11.1333          NaN        S  \n",
       "9        0            237736   30.0708          NaN        C  \n",
       "10       1           PP 9549   16.7000           G6        S  \n",
       "11       0            113783   26.5500         C103        S  \n",
       "12       0         A/5. 2151    8.0500          NaN        S  \n",
       "13       5            347082   31.2750          NaN        S  \n",
       "14       0            350406    7.8542          NaN        S  \n",
       "15       0            248706   16.0000          NaN        S  \n",
       "16       1            382652   29.1250          NaN        Q  \n",
       "17       0            244373   13.0000          NaN        S  \n",
       "18       0            345763   18.0000          NaN        S  \n",
       "19       0              2649    7.2250          NaN        C  \n",
       "20       0            239865   26.0000          NaN        S  \n",
       "21       0            248698   13.0000          D56        S  \n",
       "22       0            330923    8.0292          NaN        Q  \n",
       "23       0            113788   35.5000           A6        S  \n",
       "24       1            349909   21.0750          NaN        S  \n",
       "25       5            347077   31.3875          NaN        S  \n",
       "26       0              2631    7.2250          NaN        C  \n",
       "27       2             19950  263.0000  C23 C25 C27        S  \n",
       "28       0            330959    7.8792          NaN        Q  \n",
       "29       0            349216    7.8958          NaN        S  \n",
       "..     ...               ...       ...          ...      ...  \n",
       "861      0             28134   11.5000          NaN        S  \n",
       "862      0             17466   25.9292          D17        S  \n",
       "863      2          CA. 2343   69.5500          NaN        S  \n",
       "864      0            233866   13.0000          NaN        S  \n",
       "865      0            236852   13.0000          NaN        S  \n",
       "866      0     SC/PARIS 2149   13.8583          NaN        C  \n",
       "867      0          PC 17590   50.4958          A24        S  \n",
       "868      0            345777    9.5000          NaN        S  \n",
       "869      1            347742   11.1333          NaN        S  \n",
       "870      0            349248    7.8958          NaN        S  \n",
       "871      1             11751   52.5542          D35        S  \n",
       "872      0               695    5.0000  B51 B53 B55        S  \n",
       "873      0            345765    9.0000          NaN        S  \n",
       "874      0         P/PP 3381   24.0000          NaN        C  \n",
       "875      0              2667    7.2250          NaN        C  \n",
       "876      0              7534    9.8458          NaN        S  \n",
       "877      0            349212    7.8958          NaN        S  \n",
       "878      0            349217    7.8958          NaN        S  \n",
       "879      1             11767   83.1583          C50        C  \n",
       "880      1            230433   26.0000          NaN        S  \n",
       "881      0            349257    7.8958          NaN        S  \n",
       "882      0              7552   10.5167          NaN        S  \n",
       "883      0  C.A./SOTON 34068   10.5000          NaN        S  \n",
       "884      0   SOTON/OQ 392076    7.0500          NaN        S  \n",
       "885      5            382652   29.1250          NaN        Q  \n",
       "886      0            211536   13.0000          NaN        S  \n",
       "887      0            112053   30.0000          B42        S  \n",
       "888      2        W./C. 6607   23.4500          NaN        S  \n",
       "889      0            111369   30.0000         C148        C  \n",
       "890      0            370376    7.7500          NaN        Q  \n",
       "\n",
       "[891 rows x 12 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#load dataset as DataFrame\n",
    "train_df=pd.read_csv('train.csv',sep=',')\n",
    "train_df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Data description"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>714.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>446.000000</td>\n",
       "      <td>0.383838</td>\n",
       "      <td>2.308642</td>\n",
       "      <td>29.699118</td>\n",
       "      <td>0.523008</td>\n",
       "      <td>0.381594</td>\n",
       "      <td>32.204208</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>257.353842</td>\n",
       "      <td>0.486592</td>\n",
       "      <td>0.836071</td>\n",
       "      <td>14.526497</td>\n",
       "      <td>1.102743</td>\n",
       "      <td>0.806057</td>\n",
       "      <td>49.693429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.420000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>223.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>20.125000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>7.910400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>446.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>14.454200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>668.500000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>31.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>891.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>512.329200</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       PassengerId    Survived      Pclass         Age       SibSp  \\\n",
       "count   891.000000  891.000000  891.000000  714.000000  891.000000   \n",
       "mean    446.000000    0.383838    2.308642   29.699118    0.523008   \n",
       "std     257.353842    0.486592    0.836071   14.526497    1.102743   \n",
       "min       1.000000    0.000000    1.000000    0.420000    0.000000   \n",
       "25%     223.500000    0.000000    2.000000   20.125000    0.000000   \n",
       "50%     446.000000    0.000000    3.000000   28.000000    0.000000   \n",
       "75%     668.500000    1.000000    3.000000   38.000000    1.000000   \n",
       "max     891.000000    1.000000    3.000000   80.000000    8.000000   \n",
       "\n",
       "            Parch        Fare  \n",
       "count  891.000000  891.000000  \n",
       "mean     0.381594   32.204208  \n",
       "std      0.806057   49.693429  \n",
       "min      0.000000    0.000000  \n",
       "25%      0.000000    7.910400  \n",
       "50%      0.000000   14.454200  \n",
       "75%      0.000000   31.000000  \n",
       "max      6.000000  512.329200  "
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>891</td>\n",
       "      <td>891</td>\n",
       "      <td>891</td>\n",
       "      <td>204</td>\n",
       "      <td>889</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>unique</th>\n",
       "      <td>891</td>\n",
       "      <td>2</td>\n",
       "      <td>681</td>\n",
       "      <td>147</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>top</th>\n",
       "      <td>Badt, Mr. Mohamed</td>\n",
       "      <td>male</td>\n",
       "      <td>1601</td>\n",
       "      <td>C23 C25 C27</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>freq</th>\n",
       "      <td>1</td>\n",
       "      <td>577</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>644</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     Name   Sex Ticket        Cabin Embarked\n",
       "count                 891   891    891          204      889\n",
       "unique                891     2    681          147        3\n",
       "top     Badt, Mr. Mohamed  male   1601  C23 C25 C27        S\n",
       "freq                    1   577      7            4      644"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_df.describe(include=['O'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<li> Total number of passengers in the training dataset is 891. Actual number of passengers on Titanic was 2224. Therefore, the training dataset (sample) represents 40% of the actual population. \n",
    "<li> Fares varied significantly from paying nothing to as high as $512.\n",
    "\n",
    "#### Handling missing value\n",
    "The count variable shows that (891-714)=177 values are missing in the Age column.\n",
    "<li> The median is a robust measure because it is not strongly affected by a few outliers so instead of replacing the missing values with the mean, I am going to replace the missing values with the median age."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Data Cleaning "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.383838</td>\n",
       "      <td>2.308642</td>\n",
       "      <td>29.361582</td>\n",
       "      <td>0.523008</td>\n",
       "      <td>0.381594</td>\n",
       "      <td>32.204208</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.486592</td>\n",
       "      <td>0.836071</td>\n",
       "      <td>13.019697</td>\n",
       "      <td>1.102743</td>\n",
       "      <td>0.806057</td>\n",
       "      <td>49.693429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.420000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>22.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>7.910400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>14.454200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>35.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>31.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>512.329200</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Survived      Pclass         Age       SibSp       Parch        Fare\n",
       "count  891.000000  891.000000  891.000000  891.000000  891.000000  891.000000\n",
       "mean     0.383838    2.308642   29.361582    0.523008    0.381594   32.204208\n",
       "std      0.486592    0.836071   13.019697    1.102743    0.806057   49.693429\n",
       "min      0.000000    1.000000    0.420000    0.000000    0.000000    0.000000\n",
       "25%      0.000000    2.000000   22.000000    0.000000    0.000000    7.910400\n",
       "50%      0.000000    3.000000   28.000000    0.000000    0.000000   14.454200\n",
       "75%      1.000000    3.000000   35.000000    1.000000    0.000000   31.000000\n",
       "max      1.000000    3.000000   80.000000    8.000000    6.000000  512.329200"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Age'].fillna(df['Age'].median(), inplace=True)\n",
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7.2500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>71.2833</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.9250</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>53.1000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.0500</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Survived  Pclass     Sex   Age  SibSp  Parch     Fare\n",
       "0         0       3    male  22.0      1      0   7.2500\n",
       "1         1       1  female  38.0      1      0  71.2833\n",
       "2         1       3  female  26.0      0      0   7.9250\n",
       "3         1       1  female  35.0      1      0  53.1000\n",
       "4         0       3    male  35.0      0      0   8.0500"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df=train_df.drop(['PassengerId','Name', 'Cabin', 'Ticket','Embarked'], axis=1)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "I've decided to drop the columns indicated above. \n",
    "**PassengerId** and **Name** do not provide important data in this specific analysis because it does not affect the results. (ex. Altering the passenger's name won't affect the result of the analysis) Similarly, the port where passengers **Embarked** did not seem to strongly affect the result of the analysis as it's just a location and passengers are divided based on their passenger class not where they boarded from. For **Cabin** and **Ticket**, there were a lot of missing values as well as duplicates for Cabin (because some passengers shared a cabin) and similarly there were duplicates (unique =681 out of count=891) for Ticket column. I decided that Passenger Class (as well as **Fare**) itself could be an indication of wealth (generally, higher the fare, the more wealthy he or she is) and provide important insights in the data analysis. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    549\n",
       "1    342\n",
       "Name: Survived, dtype: int64"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#How may passengers survived(Survived=1)?\n",
    "data1=df['Survived'].value_counts()\n",
    "data1"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In our dataset around 342/891 = 38% passengers survived. This is quite similar to the actual survival rate,((2224-1514)/2224) at 32%. We can say that the dataset may be a good representative of the total population of the actual incident."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1157c04a8>"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXoAAAEICAYAAABRSj9aAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMS4wLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvpW3flQAAEhBJREFUeJzt3X+QXWd93/H3B4sfDhAEttmCpCBS\nKxncakKYjWt+tN3YTOMftHYZe2rHxTIjonQGp3QQTRSYFJJpOpCMIfEkQ6OJmQgMxg6Nxx7sCfEY\nNiSdmmInxIYYauEKe5GwBvAPZEKCnG//uI+ay2qlvSvd1d199H7N3LnnPOc553zvvWc/99xn749U\nFZKkfj1j0gVIkpaXQS9JnTPoJalzBr0kdc6gl6TOGfSS1DmDXqtekgNJfnQZtrsnyevHvd1J8X46\neRn0J6n2x/lokucOtb0lyeyI688mecuyFbgEVfW8qnpo0nUciyTvTPJ/WwjPJblpufa1mu8nHR+D\n/uS2BnjbpIs4miRrJl3DckmyBXgT8Pqqeh4wDdx1jNvq9n7S8TPoT26/CbwjydqFFiZ5TZLPJ3mi\nXb+mtf868M+B32lnor+zwLrPSXJDkm8lebytP9WW/cBL/STvSXJDm96YpJJsTfIw8Okkf5zkmnnb\n/6skb2zTleTMJOck+UaSU4b6/dsk97XpZyTZkeSrra6bk7xoqO+bknytLXvXke60EfZzdpJ7kjzZ\nXjW9/wib+ingU1X1VYCq+kZV7Rza5qq+n7RyGPQnt3uAWeAd8xe0P+zbgeuA04D3A7cnOa2q3gX8\nGXBNGw64Zv76wBbgBcCGtv5/AP5mCbX9S+AVwM8AHwOuGKrtLOBlrb7/r6ruBp4Czh1q/tm2PsB/\nBC5p234p8Bjwu0Pb/CCDM+yXtprXL1TYCPv5beC3q+qHgX8M3HyE23g3cFWS/5xkejh4l2DF3k9a\nOQx6/RfgF5KcMa/9IuDBqvpIVR2sqhuBLwP/esTtfp9BCJxZVU9X1b1V9eQS6npPVT1VVX8D3AK8\nMsnL2rIrgT+qqr9dYL0baWGX5PnAha0N4OeBd1XVXFv3PcClbdjjUuCTVfXZtuxXgL8/Sn1H28/3\ngTOTnF5VB1qwHqaqbgB+gUFI/ymwP8mOo94rh1vp95NWAIP+JFdVXwQ+CcwPmJcCX5vX9jVg3Yib\n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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11516cd30>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Let's visualize the result\n",
    "fig, axes = plt.subplots(1,1)\n",
    "data1.plot.bar(title='Not survived vs Survived', rot='horizontal', grid = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    216\n",
       "2    184\n",
       "3    491\n",
       "Name: Pclass, dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Which Passenger class had the most passengers?\n",
    "data2 = df['Pclass'].value_counts().sort_index()\n",
    "data2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1086a1cc0>"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nwv1/YbbpAsrNKGgAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10868fef0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Let's visualize \n",
    "fig, axes = plt.subplots(1,1)\n",
    "data2.plot.bar(title='Number of Passengers in each Passenger Class',rot='horizontal',grid=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can see that Passenger Class 3 had the most passengers on board. Passenger class 1 represents the most wealthiest class on board who get to enjoy the luxury while traveling, whereas passenger class 3 are economy class passengers who mostly were not wealthy. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "male      577\n",
       "female    314\n",
       "Name: Sex, dtype: int64"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Total gender ratio on board?\n",
    "data3 = df['Sex'].value_counts()\n",
    "data3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "#Let's plot the result\n",
    "fig, axes = plt.subplots(1,1)\n",
    "data3.plot.bar(title='Gender ratio on board',rot='horizontal',grid=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "There were more male passengers on board. 65% male (top=male, freq=577/count=891)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(0, 5]       44\n",
       "(5, 10]      20\n",
       "(10, 15]     19\n",
       "(15, 20]     96\n",
       "(20, 25]    122\n",
       "(25, 30]    108\n",
       "(30, 35]     88\n",
       "(35, 40]     67\n",
       "(40, 45]     47\n",
       "(45, 50]     39\n",
       "(50, 55]     24\n",
       "(55, 60]     18\n",
       "(60, 65]     14\n",
       "(65, 70]      3\n",
       "(70, 75]      4\n",
       "(75, 80]      1\n",
       "Name: AgeGroup, dtype: int64"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Number of passengers in each AgeGroup: minAge=0.42 (<1year) , maxAge=80\n",
    "bins=[0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80]\n",
    "df['AgeGroup']=pd.cut(df['Age'], bins)\n",
    "data4=pd.value_counts(df['AgeGroup']).sort_index()\n",
    "data4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x114f570f0>"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nbs8mN92YmbWct+jNzFrOhd7MrOVGxChwkyZNiunTpw93GmZmo8qVV155b0RMXtLzRkShnz59OrNn\nzx7uNMzMRhVJA4eBGJSbbszMWs6F3sys5VzozcxazoXezKzlXOjNzFrOhd7MrOVc6M3MWs6F3sys\n5ZZ4wpSkb5ED/N8TEVuUaZ8lL9LwT3K0ugMj4sHy2JHkFYqeAA6NiJ/3KXerYfoRPxnyc289Zq8+\nZmJmz7ahbNGfSF5Jp+p8YIuI2JK8us2RAJI2I690tHl5zVckjelZtmZmVtsSC31EXEJevq467bzK\nRQUuY+GFgfcGTo2If0TELeRlurbrYb5mZlZTL9ro30petxJgbZ5+zco5ZZqZmQ2Trgq9pP8gr0L/\n3c6kQZ426JVNJB0sabak2fPmzesmDTMzW4zGhV7SLPIg7f6x8DJVc4BpladNBe4c7PURcXxEzIyI\nmZMnL3GUTTMza6hRoZe0O3A48KqIeLTy0A+BfSUtJ2k9YAZwRfdpmplZU0PpXnkKsAswSdIc4ONk\nL5vlgPMlAVwWEe+IiGslnQ5cRzbpvDsinuhX8mZmtmRLLPQRsd8gk09YzPOPBo7uJikzM+sdnxlr\nZtZyLvRmZi3nQm9m1nIu9GZmLedCb2bWci70ZmYt50JvZtZyLvRmZi3nQm9m1nIu9GZmLedCb2bW\nci70ZmYt50JvZtZyLvRmZi3nQm9m1nJLHI/ebFGmH/GTIT/31mP26mMmZrY43qI3M2s5F3ozs5Zz\noTczazkXejOzlnOhNzNrORd6M7OWc6E3M2s5F3ozs5ZzoTcza7klFnpJ35J0j6RrKtMmSDpf0o3l\n/+pluiR9UdJNkv4g6Xn9TN7MzJZsKFv0JwK7D5h2BHBhRMwALiz3AfYAZpS/g4Gv9iZNMzNraomF\nPiIuAe4fMHlv4KRy+yRgn8r0kyNdBqwmaa1eJWtmZvU1baNfMyLuAij/1yjT1wZurzxvTplmZmbD\npNcHYzXItBj0idLBkmZLmj1v3rwep2FmZh1NC/3dnSaZ8v+eMn0OMK3yvKnAnYMFiIjjI2JmRMyc\nPHlywzTMzGxJmhb6HwKzyu1ZwDmV6W8uvW92AB7qNPGYmdnwWOKFRySdAuwCTJI0B/g4cAxwuqSD\ngNuA15Wn/xTYE7gJeBQ4sA85m5lZDUss9BGx3yIe2nWQ5wbw7m6TMjOz3vGZsWZmLedrxo5Avhar\nmfWSt+jNzFrOhd7MrOVc6M3MWs6F3sys5VzozcxazoXezKzlXOjNzFrOhd7MrOVc6M3MWs6F3sys\n5VzozcxazoXezKzlXOjNzFrOo1faiDLUkTs9aqfZ0HmL3sys5VzozcxazoXezKzlXOjNzFrOhd7M\nrOVc6M3MWs6F3sys5VzozcxazoXezKzluir0kt4v6VpJ10g6RdLyktaTdLmkGyWdJmlcr5I1M7P6\nGhd6SWsDhwIzI2ILYAywL/AZ4LiImAE8ABzUi0TNzKyZbptuxgIrSBoLrAjcBbwUOKM8fhKwT5fv\nYWZmXWhc6CPiDuBzwG1kgX8IuBJ4MCIWlKfNAdYe7PWSDpY0W9LsefPmNU3DzMyWoJumm9WBvYH1\ngCnASsAegzw1Bnt9RBwfETMjYubkyZObpmFmZkvQTdPNbsAtETEvIh4HzgJeCKxWmnIApgJ3dpmj\nmZl1oZtCfxuwg6QVJQnYFbgO+AXw2vKcWcA53aVoZmbd6KaN/nLyoOvvgD+WWMcDhwOHSboJmAic\n0IM8zcysoa6uMBURHwc+PmDyzcB23cQ1M7Pe8ZmxZmYt50JvZtZyLvRmZi3nQm9m1nIu9GZmLedC\nb2bWci70ZmYt50JvZtZyLvRmZi3nQm9m1nIu9GZmLedCb2bWci70ZmYt50JvZtZyLvRmZi3nQm9m\n1nIu9GZmLdfVFabMRoPpR/xkSM+79Zi9+pyJ2fDwFr2ZWcu50JuZtZwLvZlZy7nQm5m1nAu9mVnL\nudCbmbWcC72ZWct1VeglrSbpDEl/knS9pBdImiDpfEk3lv+r9ypZMzOrr9st+i8AP4uITYCtgOuB\nI4ALI2IGcGG5b2Zmw6RxoZe0CvAi4ASAiPhnRDwI7A2cVJ52ErBPt0mamVlz3WzRrw/MA74t6SpJ\n35S0ErBmRNwFUP6vMdiLJR0sabak2fPmzesiDTMzW5xuCv1Y4HnAVyNiG+ARajTTRMTxETEzImZO\nnjy5izTMzGxxuin0c4A5EXF5uX8GWfjvlrQWQPl/T3cpmplZNxoX+oiYC9wuaeMyaVfgOuCHwKwy\nbRZwTlcZmplZV7odpvgQ4LuSxgE3AweSPx6nSzoIuA14XZfvYWZmXeiq0EfE1cDMQR7atZu4ZmbW\nOz4z1sys5VzozcxazoXezKzlXOjNzFrOhd7MrOVc6M3MWs6F3sys5VzozcxazoXezKzlXOjNzFrO\n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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1157b62b0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "data4.plot.bar(title='Number of passengers in each AgeGroup', rot=80)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Most passengers on board were in the 15-35 year age range and quite a number of children on board. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Data Analyzing\n",
    "\n",
    "<li> Which gender (Female vs. Male) was more likely to survive? \n",
    "<li> Which agegroup was more likely to have survived?\n",
    "<li> Which class passengers were more likely to have survived?\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Embarked</th>\n",
       "      <th>AgeGroup</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>S</td>\n",
       "      <td>(20, 25]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C</td>\n",
       "      <td>(35, 40]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>S</td>\n",
       "      <td>(25, 30]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>S</td>\n",
       "      <td>(30, 35]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>S</td>\n",
       "      <td>(30, 35]</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Survived  Pclass     Sex   Age  SibSp  Parch     Fare Embarked  AgeGroup\n",
       "0         0       3    male  22.0      1      0   7.2500        S  (20, 25]\n",
       "1         1       1  female  38.0      1      0  71.2833        C  (35, 40]\n",
       "2         1       3  female  26.0      0      0   7.9250        S  (25, 30]\n",
       "3         1       1  female  35.0      1      0  53.1000        S  (30, 35]\n",
       "4         0       3    male  35.0      0      0   8.0500        S  (30, 35]"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sex</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>female</th>\n",
       "      <td>0.742038</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>male</th>\n",
       "      <td>0.188908</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Survived\n",
       "Sex             \n",
       "female  0.742038\n",
       "male    0.188908"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Over all, which gender (Female vs. Male) was more likely to have survived?\n",
    "survived_sex=df[['Sex','Survived']].groupby(['Sex']).mean().sort_values(by='Survived', ascending=False)\n",
    "survived_sex"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1086c90f0>"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nI3czS9ratWt56qmndi2vWrWK8ePH09DQQHt7OwD33nvvHvtoaWnh5ptvZuvWrRx33HG7bR8xYgRT\npkzhqquu4qyzzqKuro5DDz2UCRMm7Br1RwSPP/44AB/+8IdZvHgxAHfeeWdN9rOcR+5m9rYZjE9L\nbdu2jSuuuIIXXniBIUOGcPTRR7Nw4UI6Ojq45JJLuOmmm3r9WOS5557LVVddtcc3P2fNmsXMmTNZ\nUfIJuzvvvJPLLruMG264gR07dtDS0sLxxx/P/PnzOf/885k/fz7nnHNOrXb1LRQRA9JxbxobG2Nf\n+LEOfxSytvxRyP1LR0cH73//+we7jH1WpeMnqT0iGnu7bqFpGUnTJK2VtE7Sbp/Yl/R1Savyv19I\neqFw9WZmVnO9TstIqgMWAB8HOoGVklojYk13m4j4s5L2VwAnDkCtZmZWUJGR+xRgXUSsj4jtwGJg\nxh7azwbuqkVxZrbvG6yp331df49bkXAfA2woWe7M1+1G0nhgAvDjHrbPkdQmqa2rq6vaWs1sHzN8\n+HC2bNnigK9S9/nchw8f3uc+inxaptKHMXu6p1qAeyLit5U2RsRCYCFkb6gWqtDM9lljx46ls7MT\nD+aq1/1LTH1VJNw7gXEly2OBjT20bQE+2+dqzCwpQ4cO7fMvCVn/FJmWWQlMlDRB0jCyAG8tbyTp\nWOAdwCO1LdHMzKrVa7hHxE5gLrAc6ACWRsRqSddLKj3f5WxgcXhyzcxs0BX6hmpELAOWla27tmz5\nutqVZWZm/eFzy5iZJcjhbmaWIIe7mVmCHO5mZglyuJuZJcjhbmaWIIe7mVmCHO5mZglyuJuZJcjh\nbmaWIIe7mVmCHO5mZglyuJuZJcjhbmaWIIe7mVmCHO5mZglyuJuZJcjhbmaWIIe7mVmCCoW7pGmS\n1kpaJ2leD23Ok7RG0mpJi2pbppmZVaPXH8iWVAcsAD4OdAIrJbVGxJqSNhOBq4EPR8Tzkv7LQBVs\nZma9KzJynwKsi4j1EbEdWAzMKGvzp8CCiHgeICJ+U9syzcysGkXCfQywoWS5M19X6hjgGEkPSXpU\n0rRKHUmaI6lNUltXV1ffKjYzs14VCXdVWBdly0OAiUATMBv4e0mH73aliIUR0RgRjfX19dXWamZm\nBRUJ905gXMnyWGBjhTbfj4gdEfEMsJYs7M3MbBAUCfeVwERJEyQNA1qA1rI23wM+CiBpNNk0zfpa\nFmpmZsX1Gu4RsROYCywHOoClEbFa0vWSmvNmy4EtktYAPwH+PCK2DFTRZma2Z71+FBIgIpYBy8rW\nXVtyOYDP5X9mZjbI/A1VM7MEOdzNzBLkcDczS5DD3cwsQQ53M7MEOdzNzBLkcDczS5DD3cwsQQ53\nM7MEOdzNzBLkcDczS5DD3cwsQQ53M7MEOdzNzBLkcDczS5DD3cwsQQ53M7MEOdzNzBLkcDczS1Ch\ncJc0TdJaSeskzauw/WJJXZJW5X9/UvtSzcysqF5/IFtSHbAA+DjQCayU1BoRa8qaLomIuQNQo5mZ\nVanIyH0KsC4i1kfEdmAxMGNgyzIzs/4oEu5jgA0ly535unLnSHpC0j2SxlXqSNIcSW2S2rq6uvpQ\nrpmZFVEk3FVhXZQt3wc0RMSHgB8Bt1XqKCIWRkRjRDTW19dXV6mZmRVWJNw7gdKR+FhgY2mDiNgS\nEa/ni38HTK5NeWZm1hdFwn0lMFHSBEnDgBagtbSBpHeXLDYDHbUr0czMqtXrp2UiYqekucByoA74\ndkSslnQ90BYRrcCVkpqBncBzwMUDWLOZmfWi13AHiIhlwLKyddeWXL4auLq2pZmZWV/5G6pmZgly\nuJuZJcjhbmaWIIe7mVmCHO5mZglyuJuZJcjhbmaWIIe7mVmCHO5mZglyuJuZJcjhbmaWIIe7mVmC\nHO5mZglyuJuZJcjhbmaWIIe7mVmCHO5mZglyuJuZJcjhbmaWoELhLmmapLWS1kmat4d250oKSY21\nK9HMzKrVa7hLqgMWANOBScBsSZMqtBsJXAn8tNZFmplZdYqM3KcA6yJifURsBxYDMyq0+zJwM/Ba\nDeszM7M+KBLuY4ANJcud+bpdJJ0IjIuI+/fUkaQ5ktoktXV1dVVdrJmZFVMk3FVhXezaKB0AfB34\nfG8dRcTCiGiMiMb6+vriVZqZWVWKhHsnMK5keSywsWR5JPBBYIWkZ4HfBVr9pqqZ2eApEu4rgYmS\nJkgaBrQArd0bI2JrRIyOiIaIaAAeBZojom1AKjYzs171Gu4RsROYCywHOoClEbFa0vWSmge6QDMz\nq96QIo0iYhmwrGzdtT20bep/WWZm1h/+hqqZWYIc7mZmCXK4m5klyOFuZpYgh7uZWYIc7mZmCXK4\nm5klyOFuZpYgh7uZWYIc7mZmCXK4m5klyOFuZpYgh7uZWYIc7mZmCXK4m5klyOFuZpYgh7uZWYIc\n7mZmCXK4m5klqFC4S5omaa2kdZLmVdj+GUk/k7RK0r9JmlT7Us3MrKhew11SHbAAmA5MAmZXCO9F\nEXFcRJwA3Az8r5pXamZmhRUZuU8B1kXE+ojYDiwGZpQ2iIgXSxYPAaJ2JZqZWbWGFGgzBthQstwJ\nTC1vJOmzwOeAYcBplTqSNAeYA3DUUUdVW6uZmRVUZOSuCut2G5lHxIKIeC/wF8B/r9RRRCyMiMaI\naKyvr6+uUjMzK6xIuHcC40qWxwIb99B+MXB2f4oyM7P+KRLuK4GJkiZIGga0AK2lDSRNLFn8r8BT\ntSvRzMyq1euce0TslDQXWA7UAd+OiNWSrgfaIqIVmCvpdGAH8Dxw0UAWbWZme1bkDVUiYhmwrGzd\ntSWXr6pxXWZm1g/+hqqZWYIc7mZmCXK4m5klyOFuZpYgh7uZWYIc7mZmCXK4m5klyOFuZpYgh7uZ\nWYIc7mZmCXK4m5klyOFuZpYgh7uZWYIc7mZmCXK4m5klyOFuZpYgh7uZWYIc7mZmCXK4m5klqFC4\nS5omaa2kdZLmVdj+OUlrJD0h6V8kja99qWZmVlSv4S6pDlgATAcmAbMlTSpr9u9AY0R8CLgHuLnW\nhZqZWXFFRu5TgHURsT4itgOLgRmlDSLiJxHxSr74KDC2tmWamVk1ioT7GGBDyXJnvq4nlwD/VGmD\npDmS2iS1dXV1Fa/SzMyqUiTcVWFdVGwo/SHQCHy10vaIWBgRjRHRWF9fX7xKMzOrypACbTqBcSXL\nY4GN5Y0knQ58CfhIRLxem/LMzKwvioT7SmCipAnAr4EW4PzSBpJOBG4BpkXEb2pepZntRitWDHYJ\nSYmmpsEuoaZ6nZaJiJ3AXGA50AEsjYjVkq6X1Jw3+yowArhb0ipJrQNWsZmZ9arIyJ2IWAYsK1t3\nbcnl02tcl5mZ9YO/oWpmliCHu5lZghzuZmYJcribmSXI4W5mliCHu5lZghzuZmYJcribmSXI4W5m\nliCHu5lZghzuZmYJcribmSXI4W5mliCHu5lZghzuZmYJcribmSXI4W5mliCHu5lZghzuZmYJKhTu\nkqZJWitpnaR5FbafKukxSTslnVv7Ms3MrBq9hrukOmABMB2YBMyWNKms2a+Ai4FFtS7QzMyqN6RA\nmynAuohYDyBpMTADWNPdICKezbe9MQA1mplZlYpMy4wBNpQsd+brqiZpjqQ2SW1dXV196cLMzAoo\n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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x108655908>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "survived_sex.plot.bar(title='Female vs Male survival rate', rot='horizontal', color='c')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can observe from the diagram that female passengers were more likely to have survived (74%>19%)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pclass</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.629630</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.472826</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.242363</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        Survived\n",
       "Pclass          \n",
       "1       0.629630\n",
       "2       0.472826\n",
       "3       0.242363"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Passengers from which class were more likely to have survived? \n",
    "survived_class=df[['Pclass', 'Survived']].groupby(['Pclass']).mean().sort_values(by='Survived', ascending=False)\n",
    "survived_class"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x114dc0d30>"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x10fd9b898>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "survived_class.plot.bar(title='Survival rate from each Passenger class', rot='horizontal', color='c')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Overall, passengers from first class were more likey to have survived. I believe that this is also due to social status, wealthier people usually having more resources and due to the structure of titanic (lower class cabins were located on the bottom, it's harder for them to survive). "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pclass</th>\n",
       "      <th>Sex</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">1</th>\n",
       "      <th>female</th>\n",
       "      <td>0.968085</td>\n",
       "      <td>34.611765</td>\n",
       "      <td>0.553191</td>\n",
       "      <td>0.457447</td>\n",
       "      <td>106.125798</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>male</th>\n",
       "      <td>0.368852</td>\n",
       "      <td>41.281386</td>\n",
       "      <td>0.311475</td>\n",
       "      <td>0.278689</td>\n",
       "      <td>67.226127</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">2</th>\n",
       "      <th>female</th>\n",
       "      <td>0.921053</td>\n",
       "      <td>28.722973</td>\n",
       "      <td>0.486842</td>\n",
       "      <td>0.605263</td>\n",
       "      <td>21.970121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>male</th>\n",
       "      <td>0.157407</td>\n",
       "      <td>30.740707</td>\n",
       "      <td>0.342593</td>\n",
       "      <td>0.222222</td>\n",
       "      <td>19.741782</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th rowspan=\"2\" valign=\"top\">3</th>\n",
       "      <th>female</th>\n",
       "      <td>0.500000</td>\n",
       "      <td>21.750000</td>\n",
       "      <td>0.895833</td>\n",
       "      <td>0.798611</td>\n",
       "      <td>16.118810</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>male</th>\n",
       "      <td>0.135447</td>\n",
       "      <td>26.507589</td>\n",
       "      <td>0.498559</td>\n",
       "      <td>0.224784</td>\n",
       "      <td>12.661633</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               Survived        Age     SibSp     Parch        Fare\n",
       "Pclass Sex                                                        \n",
       "1      female  0.968085  34.611765  0.553191  0.457447  106.125798\n",
       "       male    0.368852  41.281386  0.311475  0.278689   67.226127\n",
       "2      female  0.921053  28.722973  0.486842  0.605263   21.970121\n",
       "       male    0.157407  30.740707  0.342593  0.222222   19.741782\n",
       "3      female  0.500000  21.750000  0.895833  0.798611   16.118810\n",
       "       male    0.135447  26.507589  0.498559  0.224784   12.661633"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Let's take a look at female vs. male survival ratio in each Passenger Class\n",
    "class_sex_group = df.groupby(['Pclass','Sex']).mean()\n",
    "class_sex_group"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x114fefa20>"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXcAAAEWCAYAAACdaNcBAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMS4wLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvpW3flQAAHaJJREFUeJzt3XmcHVWd9/HPl4SwbyYtCokEJagB\nESQiIy5RUAPzSNxQGBURFHCGUUdwxGUYxGUel0dGR1QYRxEUMUHEiNGgQAuDgglbIESGGJZEtgYS\nCIKy+Js/zmms3NylOn27b/o83/frdV9dy7lV51TV/d5ablUrIjAzs7Js1OsKmJlZ9znczcwK5HA3\nMyuQw93MrEAOdzOzAjnczcwK5HDfwEg6WdJ3e12P4ZLUL+k9va5HO5IelvTsLkwnJO3SjToNl6SX\nS7q51/WoGo3lI+k2SQeM5DzGGod7Rd5AHs0f+sHXDr2u12jKXy4h6f0Nwz+Yh5/co6p1XURsGRHL\ne12PKkkzJa1c3/dHxOUR8dxu1mk05e3v8fzZWy3p15L+ptf1Gosc7ut6ff7QD77u7HWFeuB/gHc1\nDDs8Dx8TJI3vdR0aKfFnrrMfRMSWQB/w38D5ktTjOo053tBqkrRv3otYLel6STMr4/olfTqPf1jS\nTyRNlPQ9SQ9JWihpaqX8lyWtyOOulvTy9ZlvQ7kTJZ3XMOzLkr6Su4+QtFzSGkm3Snp7m+YuBDaX\ntFt+727AZnn44LS3k3ShpAFJq3L35DbtOFLS0lx2gaSdWpTbVNJ3Jd2f27xQ0vZ53FqH3tVTWJKm\n5iOLoyTdAVwi6eeSjmuY/vWS3pS7Q9IueRnfLWlcpdwbJS3O3ftI+k2uz12SvippQpvlV51fv6TP\nSLoCeAR4tqR352WxJq+TY3LZLYCfATtUjxwlbZTX7+/zcpkj6Wkt5rfWnn9eZidIWizpQUk/kLRp\nm/q2XE/ttltJ4yR9LNdxTR4/pTLpAyTdkqd7Wp2wjojHge8AzwAm5vm8t7LsbpL0oiZtaLm+lJwq\n6d68PBZL2j2POyhPc42kP0g6oVMdN2gR4Vd+AbcBBzQZviNwP3AQ6QvxNbm/L4/vB5YBzwG2AW4i\n7eUeAIwHzgK+XZneO0gb63jgeOBuYNM87mTgu3Xm21DHnUjhsXXuHwfcBewLbAE8BDw3j3smsFuL\nZXAy8F3gY8Dn8rDPAx/Nw0/OwyYCbwY2B7YC5gIXVKbTD7wnd78hL5/n5zZ/Avh1i/kfA/wkT3cc\nsHelTWutn4ZlNRWIvKy3IH0ZHQ5cUSk/HVgNbJL7A9gld/8eeE2l7FzgxNy9d16O4/N8lgIfrJR9\najpN2tMP3AHslt+/MfC3eVsR8Mq83l6Uy88EVjZM44PAlcBkYBPgdOD7Lea31vvzMvstsAPwtFz3\nY1u8t+16ov12+2HgBuC5uV0vBCZWls+FwLbAs4ABYFa77S93bwJ8AViR+w8B/gC8OM9jF2Cnxm2j\n3foCXgdcneui3NZn5nF3AS/P3dsNrpOx+up5BTakV95AHiYFwGpyWAEfAc5uKLsAeFfu7gc+Xhn3\n/4CfVfpfD1zXZr6rgBfm7urG3Xa+Tabz38Dhufs1wO9z9xa5PW8GNuuwDE4mhfizSKG0cf47hUq4\nN3nfnsCqSn8/fw33nwFHVcZtRAq0nZpM50jg18AeLdZPp3B/dmX8VsAfKwHwGeBblfHVcP/04LjG\n9zWpxweBHzWbTpOy/cApHZb5BcAHcvdM1g33pcD+lf5nAo8D45tMa63352X2jkr/54FvtKhH7fXU\nZLu9GZjdolwAL6v0zyF/cbbY/h7L2+u9wCXA3pVt/wMt3rfWttFqfQGvJu147Qts1FDuDtLOxdbt\n1tdYefm0zLreEBHb5tcb8rCdgEPyYd5qSauBl5E+ZIPuqXQ/2qR/y8EeScfnQ8sH87S2ASY1qUud\n+VadAxyWu/8u9xMRfwTeBhwL3CXpp5Ke124hRMQdpL24zwK3RMSK6nhJm0s6XdLtkh4CLgO2rZ7a\naGjHlytteIC017Rjk7Jnkz7E50q6U9LnJW3crq4NnqpnRKwBfgocmgcdCnyvxfvOAd4kaRPgTcA1\nEXF7buuuSqed7s5t/SzN11fHOuXpHSjpSkkP5OVxUIfp7QT8qLL8lgJPAtvXnP/dle5HqGyLTebT\ncj112G6nkI5+hlsHgDn58/f0iHh1RFxdcx7kerZcXxFxCfBV4DTgHklnSNo6v/XNpHVxu6RfaYxf\nyHW417OCtAe9beW1RUT836FOKJ+n/AjwVmC7iNgWeJD0IRrufOcCM5XOfb+RHO4AEbEgIl5D+mL4\nHfCfNap7Funw+6wm444nHYK/JCK2Bl4x2MQW7TimoR2bRcSvGwtGxOMR8cmImA68FPg/pNMrkPam\nN68Uf0aTeTU+5vT7wGH5g7oZcGmzhkbETcDtwIFUvhizr5OW2bTc1o+1aGcrT9Upf3n8EPgisH1e\n//Mr02v2mNYVwIENy2/TiPjDEOpQR8v1VGO7XUE61TSS6s6j7fqKiK9ExN6kU2W7kk4pERELI2I2\n8HTS0dSc7lZ/dDnc6/ku8HpJr8sXjjbNF65aXkBsYyvgCdJ5x/GSTgK2blF2SPONiAHSaYBvA7dG\nxFIASdtLOljpgt2fSaeenqxR1x8Ar6X5Rr4V6Yhkdb64969tpvMN4KP66wXabSQd0qygpFdJekE+\nAniIdPphsK7XAYdK2ljSDOAtNdown7RHegrpVxh/aVP2HOD9pC+quZXhW+W6PJyPeN5XY76tTCCd\nSx4AnpB0IGkZD7oHmChpm8qwbwCfGby4KalP0uxh1KGVduup03b7TeBTkqbli5Z7SJrY5fp9EzhB\n0t55Hruo+YX5lutL0oslvSQfDf4R+BPwpKQJkt4uaZtIF3Ifot5nZIPlcK8hn5KYTdoDGCDtQXyY\n9Vt+C0jnNv+HtKf4JxoO24c533NIF3Kre54bkfa07yQdar8S+PtOFY2IRyPilxHxaJPR/07aE76P\ndLHv522m8yPgc6RTLQ8BN5L2kJt5BnAe6cO1FPgV6UsO4F9Ie26rgE82tLHVvP8MnM+6y6SZ75PO\nWV8SEfdVhp9A2ptfQzri+UGn+bapzxrSF8gcUjv+DphXGf+7XI/l+fTIDsCXc5mLJK0hLe+XrG8d\n2tSt3XrqtN1+KbfpItK6+y/S9tHN+s0lXTc5h7QuLiBdJG7Ubn1tnYetyu24n3QUBfBO4Lbc9mNJ\nF5DHLOULCWZmVhDvuZuZFcjhbmZWIIe7mVmBHO5mZgXq2cOVJk2aFFOnTu3V7M3MxqSrr776vojo\n61SuY7hL+hbpRpJ7I2L3JuNF+qnWQaQ7z46IiGs6TXfq1KksWrSoUzEzM6uQdHudcnVOy5wJzGoz\n/kBgWn4dTbo7zMzMeqhjuEfEZaQbX1qZDZwVyZWk54u0evaJmZmNgm5cUN2Rte9UW0nzB0Ih6WhJ\niyQtGhgY6MKszcysmW6Ee7MHKDW97TUizoiIGRExo6+v4/UAMzNbT90I95WkR3EOmkx6homZmfVI\nN8J9HnB4fkrbvsCDEXFXF6ZrZmbrqc5PIQeflDdJ6X8z/ivpv/MQEd8gPVL1INI/dngEePdIVdbM\nzOrpGO4RcViH8QH8Q9dqZGZmw+bHD5iZFahnjx9YX+rvH9X5xcyZozo/M7Nu8J67mVmBHO5mZgVy\nuJuZFcjhbmZWIIe7mVmBHO5mZgVyuJuZFcjhbmZWIIe7mVmBxtwdqja2+Q5js9HhPXczswI53M3M\nCuRwNzMrkMPdzKxADnczswI53M3MCuRwNzMrkMPdzKxADnczswI53M3MCuRwNzMrkMPdzKxADncz\nswI53M3MCuRwNzMrkMPdzKxADnczswI53M3MCuRwNzMrkMPdzKxADnczswI53M3MClQr3CXNknSz\npGWSTmwy/lmSLpV0raTFkg7qflXNzKyujuEuaRxwGnAgMB04TNL0hmKfAOZExF7AocDXul1RMzOr\nr86e+z7AsohYHhGPAecCsxvKBLB17t4GuLN7VTQzs6GqE+47Aisq/SvzsKqTgXdIWgnMB/6x2YQk\nHS1pkaRFAwMD61FdMzOro064q8mwaOg/DDgzIiYDBwFnS1pn2hFxRkTMiIgZfX19Q6+tmZnVUifc\nVwJTKv2TWfe0y1HAHICI+A2wKTCpGxU0M7OhqxPuC4FpknaWNIF0wXReQ5k7gP0BJD2fFO4+72Jm\n1iMdwz0ingCOAxYAS0m/ilki6RRJB+dixwPvlXQ98H3giIhoPHVjZmajZHydQhExn3ShtDrspEr3\nTcB+3a2amZmtL9+hamZWIIe7mVmBHO5mZgVyuJuZFcjhbmZWIIe7mVmBHO5mZgVyuJuZFcjhbmZW\nIIe7mVmBHO5mZgVyuJuZFcjhbmZWIIe7mVmBHO5mZgVyuJuZFcjhbmZWIIe7mVmBHO5mZgVyuJuZ\nFcjhbmZWIIe7mVmBHO5mZgVyuJuZFcjhbmZWIIe7mVmBHO5mZgVyuJuZFcjhbmZWIIe7mVmBHO5m\nZgVyuJuZFcjhbmZWoFrhLmmWpJslLZN0Yosyb5V0k6Qlks7pbjXNzGwoxncqIGkccBrwGmAlsFDS\nvIi4qVJmGvBRYL+IWCXp6SNVYTMz66zOnvs+wLKIWB4RjwHnArMbyrwXOC0iVgFExL3draaZmQ1F\nnXDfEVhR6V+Zh1XtCuwq6QpJV0qa1WxCko6WtEjSooGBgfWrsZmZdVQn3NVkWDT0jwemATOBw4Bv\nStp2nTdFnBERMyJiRl9f31DramZmNdUJ95XAlEr/ZODOJmV+HBGPR8StwM2ksDczsx6oE+4LgWmS\ndpY0ATgUmNdQ5gLgVQCSJpFO0yzvZkXNzKy+juEeEU8AxwELgKXAnIhYIukUSQfnYguA+yXdBFwK\nfDgi7h+pSpuZWXsdfwoJEBHzgfkNw06qdAfwofwyM7Me8x2qZmYFcribmRXI4W5mViCHu5lZgRzu\nZmYFcribmRXI4W5mViCHu5lZgRzuZmYFcribmRXI4W5mViCHu5lZgRzuZmYFcribmRXI4W5mViCH\nu5lZgWr9sw4zM/X3j+r8YubMUZ1fabznbmZWIIe7mVmBHO5mZgVyuJuZFcjhbmZWIIe7mVmBHO5m\nZgVyuJuZFcjhbmZWIIe7mVmBHO5mZgVyuJuZFcjhbmZWIIe7mVmBHO5mZgVyuJuZFcjhbmZWoFrh\nLmmWpJslLZN0Yptyb5EUkmZ0r4pmZjZUHcNd0jjgNOBAYDpwmKTpTcptBbwfuKrblTQzs6Gps+e+\nD7AsIpZHxGPAucDsJuU+BXwe+FMX62dmZuuhTrjvCKyo9K/Mw54iaS9gSkRc2G5Cko6WtEjSooGB\ngSFX1szM6qkT7moyLJ4aKW0EnAoc32lCEXFGRMyIiBl9fX31a2lmZkNSJ9xXAlMq/ZOBOyv9WwG7\nA/2SbgP2Beb5oqqZWe/UCfeFwDRJO0uaABwKzBscGREPRsSkiJgaEVOBK4GDI2LRiNTYzMw66hju\nEfEEcBywAFgKzImIJZJOkXTwSFfQzMyGbnydQhExH5jfMOykFmVnDr9aZmY2HL5D1cysQLX23G30\nqL9/VOcXM2eO6vzMbHR4z93MrEAOdzOzAjnczcwK5HA3MyuQw93MrEAOdzOzAjnczcwK5HA3MyuQ\nw93MrEAOdzOzAjnczcwK5HA3MyuQw93MrEAOdzOzAjnczcwK5HA3MyuQw93MrEAOdzOzAjnczcwK\n5HA3MyuQw93MrEAOdzOzAjnczcwK5HA3MyuQw93MrEAOdzOzAjnczcwK5HA3MyuQw93MrEAOdzOz\nAjnczcwK5HA3MytQrXCXNEvSzZKWSTqxyfgPSbpJ0mJJF0vaqftVNTOzujqGu6RxwGnAgcB04DBJ\n0xuKXQvMiIg9gPOAz3e7omZmVl+dPfd9gGURsTwiHgPOBWZXC0TEpRHxSO69Epjc3WqamdlQ1An3\nHYEVlf6VeVgrRwE/azZC0tGSFklaNDAwUL+WZmY2JHXCXU2GRdOC0juAGcAXmo2PiDMiYkZEzOjr\n66tfSzMzG5LxNcqsBKZU+icDdzYWknQA8HHglRHx5+5Uz8zM1kedPfeFwDRJO0uaABwKzKsWkLQX\ncDpwcETc2/1qmpnZUHQM94h4AjgOWAAsBeZExBJJp0g6OBf7ArAlMFfSdZLmtZicmZmNgjqnZYiI\n+cD8hmEnVboP6HK9zMxsGHyHqplZgRzuZmYFcribmRWo1jl3M+tM/f2jOr+YOXNU52dji/fczcwK\n5HA3MyuQw93MrEAOdzOzAvmCqpkZ5V0Q9567mVmBHO5mZgVyuJuZFcjhbmZWIIe7mVmBHO5mZgVy\nuJuZFcjhbmZWIIe7mVmBHO5mZgVyuJuZFcjhbmZWIIe7mVmBHO5mZgVyuJuZFcjhbmZWIIe7mVmB\nHO5mZgVyuJuZFcjhbmZWIIe7mVmBHO5mZgVyuJuZFcjhbmZWIIe7mVmBaoW7pFmSbpa0TNKJTcZv\nIukHefxVkqZ2u6JmZlZfx3CXNA44DTgQmA4cJml6Q7GjgFURsQtwKvC5blfUzMzqq7Pnvg+wLCKW\nR8RjwLnA7IYys4Hv5O7zgP0lqXvVNDOzoRhfo8yOwIpK/0rgJa3KRMQTkh4EJgL3VQtJOho4Ovc+\nLOnm9an0eprUWJ86xtA3lNvXxBhpX8ltA7evqWG0b6c6heqEe7M6xHqUISLOAM6oMc+uk7QoImb0\nYt6jwe0bu0puG7h9vVLntMxKYEqlfzJwZ6syksYD2wAPdKOCZmY2dHXCfSEwTdLOkiYAhwLzGsrM\nA96Vu98CXBIR6+y5m5nZ6Oh4WiafQz8OWACMA74VEUsknQIsioh5wH8BZ0taRtpjP3QkK72eenI6\naBS5fWNXyW0Dt68n5B1sM7Py+A5VM7MCOdzNzArU83CXtJmkX+U7YZH0c0mrJV1Y8/19+ZEH10p6\n+QjW8+EO4ydIuiz/WqhduWG1d7gk9Utq+7MtSedKmlZjWk+1RdKekn4jaYmkxZLeVuP9Y2rd5bLD\navNwjeD620nS1ZKuy+05tsb7n5fLXyvpOUNpR12Spkq6sUOZPkk/rzGtYbV3uCTdJmlShzK/lLRd\nN+bX83AHjgTOj4gnc/8XgHcO4f37A7+LiL0i4vKu166mfPfuxUCnD/hw2zsavg78c41y1bY8Ahwe\nEbsBs4B/l7Rth/ePtXUHw2/zaFif9XcX8NKI2JN0k+KJknbo8P43AD/O6+/3w6rxMETEAHCXpP06\nFB1ue0fD2cDfd2VKEdHTF/BrYGrDsJnAhTXeuydwBzAAXAdsBrwW+A1wDTAX2DKXvQ34bB63CHgR\n6RdAvweOzWW2JH3IrwFuAGZX5vVwpfvDpJ+ILgY+WRn+QmD+SLU3lz2T9OG9FFgOvBL4FrAUOLNS\n7uu5nUsa6tgPzMjdrZbVRsCtwPihtqUy7npgWknrbrhtHivrj3R3+R3ADm3eexBwN/AH4NI87B3A\nb/P6PB0YN7j8Sc+buhr4JemRJv25/QfnMlOBy3NbriEF7+DwG3P3ONLO0OD6O6ZSn9nA10aqvZVl\nfypwWV5fLwbOB24BPl0pd0Fu6xLg6Mrw24BJHZbVdoPtHe5r2BMY1sxhAnB3k+EzqR92RwBfzd2T\n8oLfIvd/BDipsmDfl7tPzRvHVkAfcG8ePh7YujKtZfz1F0UPVz5QZ5Duyt0IuBB4RWXjGxjh9p5J\ner6P8gb9EPCCXJergT1zuadV6tQP7FHZQGe0W1a5/xfA3kNtSx63T974Nypl3XWxzRvs+iPdiLiY\ndETyDzW2xZOBE3L384GfABvn/q+Rjmog3a1+YO7+EXARsDHpC/W6PHxzYNPcPY30M2tYO9yPBj6R\nuzchffntnPt3BG4Y4fb2A5/L3R8g3cz5zFyXlcDEhnW3GXBjZfhteb21XFa5/5bB9wznVefxAyNp\nErC6i9Pbl/Tkyivyc8smkPZsBg3efHUDaS9nDbBG0p/y4fQfgc9KegXwF9IGsz1pD2XQa/Pr2ty/\nJWljvCwinpT0mKSt8rQbdau9P4mIkHQDcE9E3AAgaQnpw3Ad8Nb8LJ/xpA1wOmlDHtRpWd0L7EAK\nnGaatkXSM0mHlu+KiL8MoU0b+rrrZps3yPUXESuAPfLpiQsknRcR99RoD6RTbHsDC3N9Nst1AHgM\nGDwnfgPw54h4PLd/ah6+MfBVSXsCTwK7NpnHa3P93pL7tyGtv1sr7W2lW+2tbodLIuIuAEnLSV8W\n9wPvl/TGXG5KruP9lWm0W1ZU2lJ9z5D1OtwfBTbt4vQE/CIiDmsx/s/5718q3YP944G3k/YG984b\n321N6ifg3yLi9Bbz2AT4U4tx3Wpv23ZI2hk4AXhxRKySdGaT+XZaVpvm+rayTlskbQ38lLR3dWWd\nhgyhPr1ed9C9Nm+Q629QRNyZv2heTnrKax0CvhMRH20y7vHIu6RU2hwRf6lcxP4n4B7S3vxGNF8P\nAv4xIhY0GTda7e207mYCBwB/ExGPSOpvMt92ywo6t6WWnl5QjYhVwDhJHQNP0r9Vvg1buRLYT9Iu\n+T2bS2q2B9DKNqTD/MclvYrmT19bABwpacs8jx0lPT13TyQd2j/ebOIj0N5WtibtyT4oaXvSs/gb\ndVpWu5LOGTbV2BalR1P8CDgrIuauR1s26HUHI9LmVnqx/iZL2ix3bwfsB9yc+8+StE+HOl8MvKWy\nPJ8mqdbTC7NtgLvykc87SaejGi0A3idp4zyPXSVtkcftSjoF0tQItLddO1blYH8e6QirUctlpbQr\n/wzSKZxh2RB+LXMR8LLBHkmXky4O7S9ppaTX5VEvYO1D7HVEump+BPB9SYtJH4DnDaEu3wNmSFpE\n2hP8XZN5XAScA/wmH1aeRzr/C/AqYH6HeXStva1ExPWkUw9LSBfrrmhSpuWyyoHy6OAhZ822vBV4\nBXCE0s/LrsuH2LXaMkbWHXSxza30aP09H7hK0vXAr4AvDp4uAvYg/bqkXZ1vAj4BXJTr8wvS6aS6\nvga8S9KVpKD+Y5My3wRuAq5R+nnk6fz17MOrSEdQ7XStvW38nLQHvxj4FGm9rKXDstobuDIinljP\n+a81o56+gL2As2uUW9Drutao4/nAc8d6e0mHyEd53Y3NNndz/ZGOIub2ev3UaMtlwHZjvb3Al4H9\nuzGtnu+5R8S1wKXKN/W0Kfe6duN7LR+iXxARbf8ByRhp72r++p+1Whojbemo7rqDMdPmrq2/iHgo\nIg7pZuW6TVIf8KVIp15aGiPtvTEiLu7GhPzgMDOzAvV8z93MzLrP4W5mViCHu5lZgRzuNqZIejL/\n5PBGSXMlbd6m7MmSThihehwp6Qalp0HeKGn2SMzHbH053G2seTQi9oyI3Um3tY/4o1obSZoMfBx4\nWUTsQbpRZXH7d5mNLoe7jWWXA4N3aB6e96Kvl3R2Y0FJ75W0MI//4eAev6RD8p739ZIuy8N2k/Tb\nfISwWOs+G/3pwBrS0w6JiIcj4tb83ucoPaP/akmX57sUkfRjSYfn7mMkfW9kFolZ4p9C2pgi6eGI\n2FLpmSQ/JN0ReBnpJqT9IuI+SU+LiAcknUx6IuQXJU2MiPvzND5NemDXf+Q7VWdFxB8kbRsRqyX9\nB+kuwe/l38CPi4hHK3UYR7qb9fmkW8nPj4if5HEXkx5DfIukl5CeZfPqfNfoFcC7Sf9Qft+IeGAU\nFpn9f6rXDw4zG6rNJF2Xuy8nBeUxwHkRcR9Ai9DcPYf6tqSnQQ4+fOoK4ExJc0hfEJCervjxfPrl\n/Ii4pTqhSE+QnEV6nvf+wKmS9ga+CLwUmJseEQKkh5EREfdIOon0HPc3OthtpDncbax5NNJ/z3lK\nfthSp0PQM4E3RMT1ko4gPUOfiDg272H/LXCdpD0j4hxJV+VhCyS9JyIuqU4s0iHvb4HfSvoF8G3g\nS8DqxvpVvID0GNcN4T/+WOF8zt1KcDHp+ecTIT1lr0mZrUj/im1j0oPFyGWfExFXRcRJwH3AFEnP\nBpZHxFdIz+/eI5e9WOlJkjtIelFl2nsCt0fEQ8Ctkg7J5SXphbl7H9LTHfcCTlB6rK/ZiHG425gX\nEUuAzwC/yk/5+1KTYv8CXEV6Al/1iZFfyD9pvJF07v560v9SvTGf/nkecJakjUgXbx8g/WOJL0r6\nXS7zNtJ/5oH0xXFUrscSYLakTYD/BI6MiDuB44FvqXLuxqzbfEHVrAZJu5PC+UO9rotZHQ53M7MC\n+bSMmVmBHO5mZgVyuJuZFcjhbmZWIIe7mVmBHO5mZgX6X5qtoG+NmjWTAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x115915748>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "class_sex_group['Survived'].plot.bar(title='Female vs Male survival rate in each Pclass', rot='horizontal', color='c')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AgeGroup</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>(0, 5]</th>\n",
       "      <td>0.704545</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(5, 10]</th>\n",
       "      <td>0.350000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(10, 15]</th>\n",
       "      <td>0.578947</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(15, 20]</th>\n",
       "      <td>0.343750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(20, 25]</th>\n",
       "      <td>0.344262</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(25, 30]</th>\n",
       "      <td>0.388889</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(30, 35]</th>\n",
       "      <td>0.465909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(35, 40]</th>\n",
       "      <td>0.417910</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(40, 45]</th>\n",
       "      <td>0.361702</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(45, 50]</th>\n",
       "      <td>0.410256</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(50, 55]</th>\n",
       "      <td>0.416667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(55, 60]</th>\n",
       "      <td>0.388889</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(60, 65]</th>\n",
       "      <td>0.285714</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(65, 70]</th>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(70, 75]</th>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>(75, 80]</th>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Survived\n",
       "AgeGroup          \n",
       "(0, 5]    0.704545\n",
       "(5, 10]   0.350000\n",
       "(10, 15]  0.578947\n",
       "(15, 20]  0.343750\n",
       "(20, 25]  0.344262\n",
       "(25, 30]  0.388889\n",
       "(30, 35]  0.465909\n",
       "(35, 40]  0.417910\n",
       "(40, 45]  0.361702\n",
       "(45, 50]  0.410256\n",
       "(50, 55]  0.416667\n",
       "(55, 60]  0.388889\n",
       "(60, 65]  0.285714\n",
       "(65, 70]  0.000000\n",
       "(70, 75]  0.000000\n",
       "(75, 80]  1.000000"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "survived_AgeGroup=df[['AgeGroup','Survived']].groupby(['AgeGroup']).mean().sort_values(by='Survived',ascending=False)\n",
    "survived_AgeGroup.sort_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1159a6f28>"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n+faGwPz6pWhmZl3Vu4p5tgDmldxvBfYqm+cs4A+S/gtYHziwLtmZmVlNqmm5q8JjUXb/aGBCRAwB\n3g/8QtIqsSWNlzRN0rSFCxd2PVszM6tKNcW9FRhacn8Iq3a7fBKYBBARdwP9gEHlgSLi4ogYGREj\nBw8eXFvGZmbWqWqK+1RgG0kjJK1LOmA6uWyep4H3AkjanlTc3TQ3M1tDOi3uEfEGcDJwC/AI6ayY\nmZK+IWlMnu1U4NOSHgSuAY6PiPKuGzMzW02qOaBKRNwM3Fz22Bklt2cB+9Y3NTMzq5V/oWpmVkAu\n7mZmBeTibmZWQC7uZmYF5OJuZlZALu5mZgXk4m5mVkAu7mZmBeTibmZWQC7uZmYF5OJuZlZALu5m\nZgXk4m5mVkAu7mZmBeTibmZWQFVdz3110ZQpVc8bLS0Ny8PMrNm55W5mVkAu7mZmBeTibmZWQC7u\nZmYF5OJuZlZALu5mZgXk4m5mVkAu7mZmBeTibmZWQC7uZmYF5OJuZlZALu5mZgXk4m5mVkAu7mZm\nBeTibmZWQC7uZmYFVFVxlzRa0mxJcySd1s48R0maJWmmpKvrm6aZmXVFpyMxSeoFXAAcBLQCUyVN\njohZJfNsA3wZ2DciXpD0b41K2MzMOldNy30UMCcinoiI14GJwKFl83wauCAiXgCIiOfqm6aZmXVF\nNcV9C2Beyf3W/FipbYFtJd0l6R5Jo+uVoJmZdV01A2SrwmNRIc42QAswBPizpJ0i4sWVAknjgfEA\nw4YN63KyZmZWnWpa7q3A0JL7Q4D5Fea5MSKWRcRcYDap2K8kIi6OiJERMXLw4MG15mxmZp2oprhP\nBbaRNELSusA4YHLZPL8G9geQNIjUTfNEPRM1M7PqdVrcI+IN4GTgFuARYFJEzJT0DUlj8my3AIsk\nzQLuAL4YEYsalbSZmXWsmj53IuJm4Oayx84ouR3A5/OfmZmtYVUVd1uZpkypet5oaWlYHmZm7fHl\nB8zMCsjF3cysgFzczcwKyMXdzKyAXNzNzArIxd3MrIBc3M3MCsjF3cysgFzczcwKyMXdzKyAXNzN\nzArIxd3MrIBc3M3MCsjF3cysgFzczcwKyMXdzKyAXNzNzArIxd3MrIBc3M3MCsjF3cysgFzczcwK\nyMXdzKyAeq/pBMw0ZUpV80VLS0PzMCsSt9zNzArIxd3MrIBc3M3MCsjF3cysgFzczcwKyMXdzKyA\nXNzNzArIxd3MrIBc3M3MCqiqX6hKGg2cD/QCfhYR57Qz3xHAdcCeETGtblmaddHa/KvXtXnZbYVO\ni7ukXsAFwEFAKzBV0uSImFU23wDgs8C9jUjUrIhciK1RqumWGQXMiYgnIuJ1YCJwaIX5vgmcCyyt\nY35mZlaDaor7FsC8kvut+bHlJL0DGBoRN9UxNzMzq1E1xV0VHovlE6V1gB8Ap3YaSBovaZqkaQsX\nLqw+SzMz65JqinsrMLTk/hBgfsn9AcBOwBRJTwLvBCZLGlkeKCIujoiRETFy8ODBtWdtZmYdquZs\nmanANpJGAP8AxgEfaZsYEYuBQW33JU0BvuCzZYrJBwDXPtVuc/B270k6bblHxBvAycAtwCPApIiY\nKekbksY0OkEzM+u6qs5zj4ibgZvLHjujnXlbup+WmZl1h3+hamZWQC7uZmYF5OJuZlZAVfW5m5nP\nFLLm4pa7mVkBFb7l7nN0zWxtVPji3iwa8SHkbgSztZe7ZczMCsjF3cysgFzczcwKyMXdzKyAXNzN\nzArIxd3MrIBc3M3MCsjF3cysgFzczcwKyMXdzKyAXNzNzArI15Yxs9XOF/RrPLfczcwKyMXdzKyA\nXNzNzArIxd3MrIBc3M3MCsjF3cysgFzczcwKyMXdzKyAXNzNzArIxd3MrIBc3M3MCsjF3cysgFzc\nzcwKqKriLmm0pNmS5kg6rcL0z0uaJekhSbdJ2rL+qZqZWbU6Le6SegEXAO8DdgCOlrRD2WwPACMj\nYhfgeuDceidqZmbVq6blPgqYExFPRMTrwETg0NIZIuKOiHg1370HGFLfNM3MrCuqKe5bAPNK7rfm\nx9rzSeB33UnKzMy6p5qRmFThsag4o/QxYCTwnnamjwfGAwwbNqzKFM3MrKuqabm3AkNL7g8B5pfP\nJOlA4KvAmIj4V6VAEXFxRIyMiJGDBw+uJV8zM6tCNcV9KrCNpBGS1gXGAZNLZ5D0DuAiUmF/rv5p\nmplZV3Ra3CPiDeBk4BbgEWBSRMyU9A1JY/Js3wP6A9dJmiFpcjvhzMxsNaimz52IuBm4ueyxM0pu\nH1jnvMzMrBv8C1UzswJycTczKyAXdzOzAnJxNzMrIBd3M7MCcnE3MysgF3czswJycTczKyAXdzOz\nAnJxNzMrIBd3M7MCcnE3MysgF3czswJycTczKyAXdzOzAnJxNzMrIBd3M7MCcnE3MysgF3czswJy\n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\nAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1150a6ef0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "survived_AgeGroup.sort_index().plot.bar(title='Relationship between survival rate & AgeGroup', \n",
    "                                      color='c')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.FacetGrid at 0x1159ad518>"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\nJElq4N8BV7inR5zg4vEAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x115da8d30>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Let's compare the \"not survived\" vs \"survived\" data across age groups.\n",
    "Age = sns.FacetGrid(df, col='Survived',size=3.2, aspect=1.6)\n",
    "Age.map(plt.hist, 'Age', bins=20, color='m')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "After observing two different plots, we can see that while most passengers on board were in the 15-35 year age range, large number of passengers in that age range did not survive. On the other hand, children (age<=5) had high survival rate. Oldest passengers (Age = 80) survived!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SibSp</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.345395</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.535885</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.464286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.250000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.166667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Survived\n",
       "SibSp          \n",
       "0      0.345395\n",
       "1      0.535885\n",
       "2      0.464286\n",
       "3      0.250000\n",
       "4      0.166667\n",
       "5      0.000000\n",
       "8      0.000000"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# What is the relationship between number of siblings & spouses on board and survival rate?\n",
    "\n",
    "survived_SibSp=df[['SibSp','Survived']].groupby(['SibSp']).mean().sort_values(by='Survived',ascending=False)\n",
    "survived_SibSp.sort_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x115f31320>"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\ns2wODzMzy+bwMDOzbA4PMzPL5vAwM7NsDg8zM8vm8DAzs2wODzMzy+bwMDOzbA4PMzPL5vAwM7Ns\nDg8zM8vm8DAzs2xZf8+jGWjevF4dfrS19erwzcw2Bz7yMDOzbA4PMzPL5vAwM7NsDg8zM8vm8DAz\ns2wODzMzy+bwMDOzbA4PMzPL5vAwM7NsDg8zM8vm8DAzs2wODzMzy+bwMDOzbA4PMzPLlhUeksZJ\nukvSYkmnV+n+EUl/lrRA0k2SRvdcqWZm1izqDg9JLcAlwOHAaODYKuEwIyL2jogxwAXAV3qsUjMz\naxo5Rx77A4sj4t6IeB6YCRxZbhART5Tebg/ExpdoZmbNJucvCQ4HlpTedwAHVDaS9FHgk8DWwCHV\nBiRpMjAZYJdddskowczMmkHOkYeqfLbBkUVEXBIRrwY+A/xntQFFxLSIGBsRY4cOHZpRgpmZNYOc\n8OgARpbejwCWdtJ+JnBUd4oyM7PmlhMetwK7SxolaWtgEjCn3EDS7qW37wLu3vgSzcys2dR9zSMi\n1kiaAlwLtACXRcRCSecA8yNiDjBF0qHAauAx4MTeKNrMzBor54I5ETEXmFvx2Vml11N7qC4zM2ti\n/oW5mZllc3iYmVk2h4eZmWVzeJiZWTaHh5mZZXN4mJlZNoeHmZllc3iYmVk2h4eZmWVzeJiZWTaH\nh5mZZXN4mJlZNoeHmZlly3qqrllfp3nzenX40dbWq8M3axY+8jAzs2wODzMzy+bwMDOzbA4PMzPL\n5vAwM7NsDg8zM8vm8DAzs2wODzMzy+bwMDOzbA4PMzPL5vAwM7NsDg8zM8vm8DAzs2wODzMzy+bw\nMDOzbFnhIWmcpLskLZZ0epXun5R0p6Q7JN0gadeeK9XMzJpF3eEhqQW4BDgcGA0cK2l0RbM/AWMj\n4vXAD4ELeqpQMzNrHjlHHvsDiyPi3oh4HpgJHFluEBG/iYin09s/AiN6pkwzM2smOeExHFhSet+R\nPqvlZOAX3SnKzMyaW87fMFeVz6JqQ+l4YCzwlhrdJwOTAXbZZZeMEszMrBnkHHl0ACNL70cASysb\nSToU+CwwPiKeqzagiJgWEWMjYuzQoUNz6jUzsyaQEx63ArtLGiVpa2ASMKfcQNIbgEspguORnivT\nzMyaSd3hERFrgCnAtcAiYHZELJR0jqTxqdl/AwOBqyQtkDSnxuDMzKwPy7nmQUTMBeZWfHZW6fWh\nPVSXmZk1Mf/C3MzMsjk8zMwsm8PDzMyyOTzMzCybw8PMzLI5PMzMLJvDw8zMsmX9zsPMGkvz5vXa\nsKOtrdeGbZsfH3mYmVk2h4eZmWVzeJiZWTaHh5mZZXN4mJlZNoeHmZllc3iYmVk2h4eZmWVzeJiZ\nWTaHh5mZZXN4mJlZNoeHmZllc3iYmVk2h4eZmWVzeJiZWTaHh5mZZXN4mJlZNoeHmZllc3iYmVk2\nh4eZmWVzeJiZWTaHh5mZZcsKD0njJN0labGk06t0f7Ok2yStkXRMz5VpZmbNpO7wkNQCXAIcDowG\njpU0uqLZg8BJwIyeKtDMzJpPv4y2+wOLI+JeAEkzgSOBO9c2iIj7U7cXe7BGMzNrMjmnrYYDS0rv\nO9Jn2SRNljRf0vxly5Z1ZxBmZtZAOeGhKp9Fd740IqZFxNiIGDt06NDuDMLMzBooJzw6gJGl9yOA\npT1bjpmZ9QU54XErsLukUZK2BiYBc3qnLDMza2Z1h0dErAGmANcCi4DZEbFQ0jmSxgNI2k9SBzAB\nuFTSwt4o2szMGivnbisiYi4wt+Kzs0qvb6U4nWVmZpsx/8LczMyyOTzMzCybw8PMzLI5PMzMLJvD\nw8zMsjk8zMwsm8PDzMyyOTzMzCybw8PMzLI5PMzMLJvDw8zMsjk8zMwsm8PDzMyyOTzMzCybw8PM\nzLI5PMzMLJvDw8zMsjk8zMwsm8PDzMyyOTzMzCybw8PMzLI5PMzMLJvDw8zMsjk8zMwsm8PDzMyy\nOTzMzCybw8PMzLI5PMzMLJvDw8zMsjk8zMwsW1Z4SBon6S5JiyWdXqX7NpJmpe43S2rtqULNzKx5\n1B0eklqAS4DDgdHAsZJGVzQ7GXgsInYDvgr8V08VamZmzSPnyGN/YHFE3BsRzwMzgSMr2hwJXJ5e\n/xB4myRtfJlmZtZM+mW0HQ4sKb3vAA6o1SYi1khaCQwGlpcbSZoMTE5vV0m6K6foTEMqv78zTZh0\nrr+x+nL9fbl2yKy/CfV2/bv24rC7lBMe1Zat6EYbImIaMC3ju7tN0vyIGLspvqs3uP7G6sv19+Xa\nwfU3u5zTVh3AyNL7EcDSWm0k9QN2BB7dmALNzKz55ITHrcDukkZJ2hqYBMypaDMHODG9Pgb4dURs\ncORhZmZ9W92nrdI1jCnAtUALcFlELJR0DjA/IuYA3wG+L2kxxRHHpN4oOtMmOT3Wi1x/Y/Xl+vty\n7eD6m5p8YGBmZrn8C3MzM8vm8DAzs2ybdXh09TiVZibpMkmPSPpLo2vJJWmkpN9IWiRpoaSpja4p\nh6QBkm6RdHuq/wuNrqk7JLVI+pOkaxpdSy5J90v6s6QFkuY3up5ckj6Rlp2/SLpS0oBG19TTNtvw\nqPNxKs1sOjCu0UV00xrgUxGxJ/Am4KN9bNo/BxwSEfsAY4Bxkt7U4Jq6YyqwqNFFbIS3RsSYvvZb\nCUnDgdOAsRHxOoobjJrh5qEetdmGB/U9TqVpRcRv6aO/kYmIhyLitvT6SYoN2PDGVlW/KKxKb/un\nf33qzhJJI4B3Ad9udC1bqH7Atun3btux4W/i+rzNOTyqPU6lz2zANhfpycpvAG5ubCV50imfBcAj\nwK8iok/VD3wN+DTwYqML6aYArpPUnh5n1GdExN+BC4EHgYeAlRFxXWOr6nmbc3jU9agU6z2SBgJX\nAx+PiCcaXU+OiHghIsZQPElhf0mva3RN9ZJ0BPBIRLQ3upaNcFBEvJHitPNHJb250QXVS9LOFGc5\nRgHDgO0lHd/Yqnre5hwe9TxOxXqJpP4UwXFFRPyo0fV0V0Q8Dsyjb11/OggYL+l+itO1h0j6QWNL\nyhMRS9P/jwA/pjgN3VccCtwXEcsiYjXwI+CfG1xTj9ucw6Oex6lYL0iP4f8OsCgivtLoenJJGipp\np/R6W4qNwV8bW1X9IuKMiBgREa0Uy/2vI6LP7PlK2l7SoLWvgcOAvnTX4YPAmyRtl9aFt9G3b1yo\narMNj4hYA6x9nMoiYHZELGxsVfWTdCXwB2APSR2STm50TRkOAk6g2ONdkP69s9FFZXgV8BtJd1Ds\nhPwqIvrc7a592CuAmyTdDtwC/DwiftngmuqWro/9ELgN+DPFdnaze1SJH09iZmbZNtsjDzMz6z0O\nDzMzy+bwMDOzbA4PMzPL5vAwM7NsDg/bYkj6bHrS6R3p9uEDJH177UMbJa2q0d+bJN2c+lkk6exN\nWrhZE6r7z9Ca9WWSDgSOAN4YEc9JGgJsHREfrKP3y4H3RMTt6WnNe/RmrWZ9gY88bEvxKmB5RDwH\nEBHLI2KppHmS1j3yW9KXJd0m6QZJQ9PHL6d4wN3aZ17dmdqeLen7kn4t6W5JH9rE42TWMA4P21Jc\nB4yU9DdJ35D0lipttgduSw/kuxH4fPr8q8Bdkn4s6cMVf9jn9RSPPj8QOEvSsF4cB7Om4fCwLUL6\n+xz7ApOBZcAsSSdVNHsRmJVe/wD4l9TvOcBYigA6Dig/KuOnEfFMRCwHfkPfeoCfWbf5modtMSLi\nBYon5M6T9GfgxK56KfV7D/A/kr4FLJM0uLJNjfdmmyUfedgWQdIeknYvfTQGeKCi2VbAMen1ccBN\nqd93paejAuwOvAA8nt4fmf5t8oLWAAAAhklEQVTm+WCgjeJBimabPR952JZiIHBxetT6GmAxxSms\nH5baPAXsJakdWAlMTJ+fAHxV0tOp3/dGxAspT24Bfg7sAnxx7d+hMNvc+am6Zt2Ufu+xKiIubHQt\nZpuaT1uZmVk2H3mYmVk2H3mYmVk2h4eZmWVzeJiZWTaHh5mZZXN4mJlZtv8DwZtno3YbM+gAAAAA\nSUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x115ffa908>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "survived_SibSp.sort_index().plot.bar(title='Relationship between survival rate & number of SibSp on board',\n",
    "                                     rot='horizontal',color='c')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It is obvious that the more Siblings or Spouses are on board, the survival rate decreases as the number of spaces on lifeboat were limited, and to escape and survive such a disaster, is hard when you have more people with you and some people have to sacrifice to save the other family member. But there seems to be no direct correlation with the number of siblings & spouses and survival rate. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Survived</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Parch</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.343658</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.550847</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.600000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.200000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Survived\n",
       "Parch          \n",
       "0      0.343658\n",
       "1      0.550847\n",
       "2      0.500000\n",
       "3      0.600000\n",
       "4      0.000000\n",
       "5      0.200000\n",
       "6      0.000000"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#What is the relationship between number of Parent&Children on board and survival rate?\n",
    "\n",
    "survived_Parch=df[['Parch','Survived']].groupby(['Parch'],).mean().sort_values(by='Survived', ascending=False)\n",
    "survived_Parch.sort_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x11615a9e8>"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n7cDwUvcwYEWpewjwamCupIeA1wGzfdHczGz7kxMe84DRkkZJ2hmYBMzu6BkRayNiaES0REQLcCcw\nISLm92rFZmZWdzWHR0RsBKYANwGLgVkRsVDSBZIm9FWBZmbWeAbkNI6IOcCcivfO66Rta8/LMjOz\nRua/MDczs2wODzMzy+bwMDOzbA4PMzPL5vAwM7NsDg8zM8vm8DAzs2wODzMzy+bwMDOzbA4PMzPL\n5vAwM7NsDg8zM8vm8DAzs2xZd9VtBJo7t0+HH62tfTp8M7PtgY88zMwsm8PDzMyyOTzMzCybw8PM\nzLI5PMzMLJvDw8zMsjk8zMwsm8PDzMyyOTzMzCybw8PMzLI5PMzMLFtWeEgaL2mJpKWSplXpf4ak\n30taIOm3ksb0XqlmZtYoag4PSU3AFcDxwBjglCrhMCMiDoqIQ4BLgK/2WqVmZtYwco48DgeWRsSy\niFgPzAROKDeIiCdLnbsBsfUlmplZo8m5Jfv+wPJSdzswrrKRpI8A5wA7A0dXG5CkycBkgBEjRmSU\nYGZmjSDnyENV3tviyCIiroiIlwOfAj5bbUARMT0ixkbE2Obm5owSzMysEeSERzswvNQ9DFjRRfuZ\nwIk9KcrMzBpbTnjMA0ZLGiVpZ2ASMLvcQNLoUuc/Aw9sfYlmZtZoar7mEREbJU0BbgKagKsiYqGk\nC4D5ETEbmCLpGGADsAZ4X18UbWZm9ZX1DPOImAPMqXjvvNLrqb1Ul5mZNTD/hbmZmWVzeJiZWTaH\nh5mZZXN4mJlZNoeHmZllc3iYmVk2h4eZmWVzeJiZWTaHh5mZZXN4mJlZNoeHmZllc3iYmVk2h4eZ\nmWVzeJiZWTaHh5mZZXN4mJlZNoeHmZllc3iYmVk2h4eZmWVzeJiZWTaHh5mZZXN4mJlZNoeHmZll\nc3iYmVk2h4eZmWVzeJiZWbas8JA0XtISSUslTavS/xxJiyTdJ+mXkkb2XqlmZtYoag4PSU3AFcDx\nwBjgFEljKpr9DhgbEf8A/BC4pLcKNTOzxpFz5HE4sDQilkXEemAmcEK5QUT8OiKeSZ13AsN6p0wz\nM2skAzLa7g8sL3W3A+O6aH868D/VekiaDEwGGDFiREYJZtZfae7cPh1+tLb26fBtczlHHqryXlRt\nKL0HGAt8uVr/iJgeEWMjYmxzc3NGCWZm1ghyjjzageGl7mHAispGko4BPgO8ISL+tnXlmZlZI8o5\n8pgHjJY0StLOwCRgdrmBpNcAVwITIuKx3ivTzMwaSc3hEREbgSnATcBiYFZELJR0gaQJqdmXgcHA\n9ZIWSJrdyeDMzKwfyzltRUTMAeZUvHde6fUxvVSXmZk1MP+FuZmZZXN4mJlZNoeHmZllc3iYmVk2\nh4eZmWVzeJiZWTaHh5mZZXN4mJlZNoeHmZllc3iYmVk2h4eZmWVzeJiZWTaHh5mZZXN4mJlZNoeH\nmZllc3iYmVk2h4eZmWVzeJiZWTaHh5mZZXN4mJlZNoeHmZllc3iYmVk2h4eZmWVzeJiZWTaHh5mZ\nZcsKD0njJS2RtFTStCr9Xy/pHkkbJZ3Ue2WamVkjqTk8JDUBVwDHA2OAUySNqWj2Z+A0YEZvFWhm\nZo1nQEbbw4GlEbEMQNJM4ARgUUeDiHgo9XuhF2s0M7MGk3Paan9geam7Pb2XTdJkSfMlzV+5cmVP\nBmFmZnWUEx6q8l70ZKQRMT0ixkbE2Obm5p4MwszM6ignPNqB4aXuYcCK3i3HzMz6g5zwmAeMljRK\n0s7AJGB235RlZmaNrObwiIiNwBTgJmAxMCsiFkq6QNIEAEmHSWoHTgaulLSwL4o2M7P6yvm1FREx\nB5hT8d55pdfzKE5nmZnZdsx/YW5mZtkcHmZmls3hYWZm2RweZmaWzeFhZmbZHB5mZpbN4WFmZtkc\nHmZmls3hYWZm2RweZmaWzeFhZmbZHB5mZpbN4WFmZtkcHmZmls3hYWZm2RweZmaWzeFhZmbZHB5m\nZpbN4WFmZtkcHmZmls3hYWZm2RweZmaWzeFhZmbZHB5mZpbN4WFmZtkcHmZmli0rPCSNl7RE0lJJ\n06r030XSdan/XZJaeqtQMzNrHDWHh6Qm4ArgeGAMcIqkMRXNTgfWRMQBwNeAL/VWoWZm1jhyjjwO\nB5ZGxLKIWA/MBE6oaHMCcE16/UPgTZK09WWamVkjGZDRdn9geam7HRjXWZuI2ChpLbA3sKrcSNJk\nYHLqXCdpSU7RmYZWjr8rDZh0rr++dqj6G4znfddG9uGwu5UTHtWWTfSgDRExHZieMe4ekzQ/IsZu\ni3H1BddfX66/fvpz7dD/6+9OzmmrdmB4qXsYsKKzNpIGAHsAj29NgWZm1nhywmMeMFrSKEk7A5OA\n2RVtZgPvS69PAn4VEVsceZiZWf9W82mrdA1jCnAT0ARcFRELJV0AzI+I2cB3gP+UtJTiiGNSXxSd\naZucHutDrr++XH/99Ofaof/X3yX5wMDMzHL5L8zNzCybw8PMzLJt1+HR3e1UGpmkqyQ9JukP9a4l\nl6Thkn4tabGkhZKm1rumHJIGSbpb0r2p/n+rd009IalJ0u8k3VjvWnJJekjS7yUtkDS/3vXkkrSn\npB9Kuj9tB0fUu6bett1e80i3U/kjcCzFT4jnAadExKK6FlYjSa8H1gHfi4hX17ueHJL2BfaNiHsk\nDQHagBP70bwXsFtErJM0EPgtMDUi7qxzaVkknQOMBXaPiLfWu54ckh4CxkZEv/wDR0nXAL+JiG+n\nX6e+JCKeqHddvWl7PvKo5XYqDSsibqWf/o1MRDwSEfek108BiynuPtAvRGFd6hyY/vWrb1mShgH/\nDHy73rXsaCTtDrye4tenRMT67S04YPsOj2q3U+k3O7DtRbqz8muAu+pbSZ50ymcB8Bjwi4joV/UD\nXwc+CbxQ70J6KICfS2pLtzPqT14GrAS+m04bflvSbvUuqrdtz+FR061SrO9IGgzcAHwsIp6sdz05\nIuL5iDiE4k4Kh0vqN6cOJb0VeCwi2updy1Y4MiJeS3EX74+k07j9xQDgtcB/RMRrgKeBfnXNtRbb\nc3jUcjsV6yPpWsENwLUR8V/1rqen0umGucD4OpeS40hgQrpuMBM4WtL361tSnohYkf5/DPgRxWno\n/qIdaC8drf6QIky2K9tzeNRyOxXrA+mC83eAxRHx1XrXk0tSs6Q90+tdgWOA++tbVe0i4tyIGBYR\nLRTr/a8i4j11LqtmknZLP7Qgne45Dug3vzqMiEeB5ZJekd56E9AvfiySI+euuv1KZ7dTqXNZNZP0\nA6AVGCqpHfh8RHynvlXV7EjgVOD36boBwKcjYk4da8qxL3BN+sXeTsCsiOh3P3ftx14K/Cg9CmgA\nMCMiflbfkrJ9FLg2fXFdBry/zvX0uu32p7pmZtZ3tufTVmZm1kccHmZmls3hYWZm2RweZmaWzeFh\nZmbZHB62w5D0fLpL6x8kXS/pJb0wzNMkfaM36jPrTxwetiN5NiIOSXcpXg+cUesH0998mFni8LAd\n1W+AAwAk/TjdgG9h+SZ8ktZJukDSXcARkg6TdHt6zsfdHX8FDewn6WeSHpB0SR2mxWyb227/wtys\nM5IGUNxwr+Ovlj8QEY+nW5HMk3RDRKwGdgP+EBHnpb8Uvh+YGBHz0m23n02fP4TizsF/A5ZIujwi\nlmO2HXN42I5k19LtUn5Det4CcLakt6XXw4HRwGrgeYqbOwK8AngkIuYBdNwlON1C45cRsTZ1LwJG\nsvnjAMy2Ow4P25E8m26zvomkVoobHx4REc9ImgsMSr2fi4jnO5rS+S39/1Z6/TzermwH4GsetqPb\nA1iTguPvgdd10u5+imsbhwFM5KM2AAAAXUlEQVRIGpJOf5ntkLzy247uZ8AZku4DlgBVn1MeEesl\nTQQuT9dGnqU4YjHbIfmuumZmls2nrczMLJvDw8zMsjk8zMwsm8PDzMyyOTzMzCybw8PMzLI5PMzM\nLNv/Ao5nY/URvqFaAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x116096a20>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "survived_Parch.sort_index().plot.bar(title='Relationship between survival rate & number of Parch on board', \n",
    "                                     rot='horizontal', color='c')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "There seems to be no direct relationship between the number of children and parents on board and the survival rate. Surprisingly it is observed that upto Parch=3, survival rate is decently higher than the mean survival rate(38%.  I believe that this is due to parents (married couple) trying to sacrifice their lives to save their children or their elder parents. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1166dcd68>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "P_Sur_Sex = sns.FacetGrid(df, col='Pclass', row='Survived',size=2.4, aspect=1.6)\n",
    "P_Sur_Sex.map(plt.hist, 'Sex', color='m')\n",
    "P_Sur_Sex.add_legend();"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "** Conclusion** \n",
    "\n",
    "Through conducting data analysis on which group were more likely to have survived the titanic shipwreck, these were the conclusions that I found. \n",
    "\n",
    "<li> Female passengers were more likely to have survived than male passengers.\n",
    "<li> Passengers on Pclass were more likely to have survived.\n",
    "<li> An exception is that although most female passengers are likely to have survived, most female passengers in third class (Pclass=3) were exposed to death. \n",
    "<li> Similarly, Men from the First Class died at a higher rate than women from the Third Class, which supports the conclusion that female passengers were still more likely to have survived. \n",
    "<li> Children (Age<5 years) were more likely to have survived that those who were aged 15-35 years while majority of the passengers were also aged in that group.\n",
    "<li> The number of Parent & children as well as number of siblings and spouses did not have a direct correlation with the survival rate. \n",
    "\n",
    "Although these were the findings through analyzing the training data set, it disregards a lot of factors such as, it's not a completely accurate data set, water temperature at the time of shipwreck, structure of titanic, the part of titanic that hit the iceberg (some people probably weren't aware of titanic sinking until way later, some people probably did not survive because they were unable to escape due to being trapped by water flowing in and etc.) and how people were given spaces on the lifeboat and etc. However, It was very interesting to be given the opportunity to analyze real life data and I hope to acquire more skills and be able to conduct more complicated analysis later on."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
